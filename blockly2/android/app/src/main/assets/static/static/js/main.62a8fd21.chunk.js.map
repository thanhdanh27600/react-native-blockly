{"version":3,"sources":["useBlocklyWorkspace.js","debounce.jsx","BlocklyWorkspace.jsx","initContent/content.jsx","App.js","serviceWorker.js","index.js"],"names":["useBlocklyWorkspace","ref","initialXml","toolboxConfiguration","workspaceConfiguration","onWorkspaceChange","onImportXmlError","onInject","onDispose","React","useState","workspace","setWorkspace","xml","setXml","didInitialImport","setDidInitialImport","didHandleNewWorkspace","setDidHandleNewWorkspace","workspaceConfigurationRef","useRef","useEffect","current","toolboxConfigurationRef","updateToolbox","onInjectRef","onDisposeRef","handleWorkspaceChanged","useCallback","newWorkspace","Blockly","inject","toolbox","theme","Theme","Flyout","prototype","MARGIN","Scrollbar","setOrigin","onDisposeFunction","dispose","listener","addChangeListener","removeChangeListener","func","wait","timeout","later","args","clearTimeout","setTimeout","debounce","newXml","Xml","domToText","workspaceToDom","callback","cancel","domToWorkspace","textToDom","e","importFromXml","BlocklyWorkspace","className","onXmlChange","editorDiv","onXmlChangeRef","defaultProps","ConfigFiles","INITIAL_XML","INITIAL_TOOLBOX_XML","INITIAL_TOOLBOX_JSON","kind","contents","name","colour","text","callbackKey","type","blockxml","custom","INITIAL_TOOLBOX_CATEGORIES","blocks","values","TIMES","shadow","fields","NUM","statements","DO","TEXT","App","btnRunRef","xmlInject","setXmlInject","run","setRun","setUartFeedback","initApi","interpreter","globalObject","JavaScript","addReservedWords","wrapper","alert","arguments","length","setProperty","createNativeFunction","console","log","prompt","id","highlightBlock","createAsyncFunction","timeInSeconds","num","window","ReactNativeWebView","postMessage","JSON","stringify","REQUEST","DATA","error","setLocale","Vi","STATEMENT_PREFIX","INFINITE_LOOP_TRAP","localStorage","getItem","CryptoJS","require","originalText","AES","decrypt","toString","enc","Utf8","thang","Blocks","init","this","jsonInit","block","getFieldValue","trai","phai","doi","min","max","value","Number","manhinh","registerButtonCallback","ciphertext","encrypt","document","getElementById","innerText","OK","style","display","Button","onClick","element","getElementsByClassName","opacity","dispatchEvent","Event","variant","disabled","code","workspaceToCode","myInterpreter","Interpreter","nextStep","step","zoom","controls","startScale","maxScale","minScale","scaleSpeed","pinch","horizontalLayout","toolboxPosition","Spinner","animation","fontSize","Boolean","location","hostname","match","addEventListener","editor","createElement","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62a8fd21.chunk.js","sourcesContent":["import React from \"react\";\nimport Blockly from \"blockly\";\n\nimport debounce from \"./debounce\";\nimport Theme from '@blockly/theme-modern';\n\nfunction importFromXml(xml, workspace, onImportXmlError) {\n  try {\n    Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), workspace);\n    return true;\n  } catch (e) {\n    if (onImportXmlError) {\n      onImportXmlError(e);\n    }\n    return false;\n  }\n}\n\nconst useBlocklyWorkspace = ({\n  ref,\n  initialXml,\n  toolboxConfiguration,\n  workspaceConfiguration,\n  onWorkspaceChange,\n  onImportXmlError,\n  onInject,\n  onDispose,\n}) => {\n  const [workspace, setWorkspace] = React.useState(null);\n  const [xml, setXml] = React.useState(initialXml);\n  const [didInitialImport, setDidInitialImport] = React.useState(false);\n  const [didHandleNewWorkspace, setDidHandleNewWorkspace] =\n    React.useState(false);\n\n  // we explicitly don't want to recreate the workspace when the configuration changes\n  // so, we'll keep it in a ref and update as necessary in an effect hook\n  const workspaceConfigurationRef = React.useRef(workspaceConfiguration);\n  React.useEffect(() => {\n    workspaceConfigurationRef.current = workspaceConfiguration;\n  }, [workspaceConfiguration]);\n\n  const toolboxConfigurationRef = React.useRef(toolboxConfiguration);\n  React.useEffect(() => {\n    toolboxConfigurationRef.current = toolboxConfiguration;\n    if (toolboxConfiguration && workspace) {\n      workspace.updateToolbox(toolboxConfiguration);\n    }\n  }, [toolboxConfiguration, workspace]);\n\n  const onInjectRef = React.useRef(onInject);\n  const onDisposeRef = React.useRef(onDispose);\n  React.useEffect(() => {\n    onInjectRef.current = onInject;\n  }, [onInject]);\n  React.useEffect(() => {\n    onDisposeRef.current = onDispose;\n  }, [onDispose]);\n\n  const handleWorkspaceChanged = React.useCallback(\n    (newWorkspace) => {\n      if (onWorkspaceChange) {\n        onWorkspaceChange(newWorkspace);\n      }\n    },\n    [onWorkspaceChange]\n  );\n\n  // Workspace creation\n  React.useEffect(() => {\n    const newWorkspace = Blockly.inject(ref.current, {\n      ...workspaceConfigurationRef.current,\n      toolbox: toolboxConfigurationRef.current,\n      theme: Theme,\n    });\n    Blockly.Flyout.prototype.MARGIN = 20\n    Blockly.Scrollbar.prototype.setOrigin(9,9)\n    setWorkspace(newWorkspace);\n    setDidInitialImport(false); // force a re-import if we recreate the workspace\n    setDidHandleNewWorkspace(false); // Singal that a workspace change event needs to be sent.\n\n    if (onInjectRef.current) {\n      onInjectRef.current(newWorkspace);\n    }\n\n    const onDisposeFunction = onDisposeRef.current;\n\n    // Dispose of the workspace when our div ref goes away (Equivalent to didComponentUnmount)\n    return () => {\n      newWorkspace.dispose();\n\n      if (onDisposeFunction) {\n        onDisposeFunction(newWorkspace);\n      }\n    };\n  }, [ref]);\n\n  // Send a workspace change event when the workspace is created\n  React.useEffect(() => {\n    if (workspace && !didHandleNewWorkspace) {\n      handleWorkspaceChanged(workspace);\n    }\n  }, [handleWorkspaceChanged, didHandleNewWorkspace, workspace]);\n\n  // Workspace change listener\n  React.useEffect(() => {\n    if (workspace == null) {\n      return undefined;\n    }\n\n    const listener = () => {\n      handleWorkspaceChanged(workspace);\n    };\n    workspace.addChangeListener(listener);\n    return () => {\n      workspace.removeChangeListener(listener);\n    };\n  }, [workspace, handleWorkspaceChanged]);\n\n  // xmlDidChange callback\n  React.useEffect(() => {\n    if (workspace == null) {\n      return undefined;\n    }\n\n    const [callback, cancel] = debounce(() => {\n      const newXml = Blockly.Xml.domToText(\n        Blockly.Xml.workspaceToDom(workspace)\n      );\n      if (newXml === xml) {\n        return;\n      }\n\n      setXml(newXml);\n    }, 200);\n\n    workspace.addChangeListener(callback);\n\n    return () => {\n      workspace.removeChangeListener(callback);\n      cancel();\n    };\n  }, [workspace, xml]);\n\n  // Initial Xml Changes\n  React.useEffect(() => {\n    if (xml && workspace && !didInitialImport) {\n      const success = importFromXml(xml, workspace, onImportXmlError);\n      if (!success) {\n        setXml(null);\n      }\n      setDidInitialImport(true);\n    }\n  }, [xml, workspace, didInitialImport, onImportXmlError]);\n\n  return { workspace, xml };\n};\n\nexport default useBlocklyWorkspace;\n","export default function debounce(func, wait) {\n  let timeout = null;\n  let later = null;\n\n  const debouncedFunction = (...args) => {\n    later = () => {\n      timeout = null;\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n\n  const cancel = () => {\n    if (timeout !== null) {\n      clearTimeout(timeout);\n      later();\n    }\n  };\n\n  return [debouncedFunction, cancel];\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport useBlocklyWorkspace from \"./useBlocklyWorkspace\";\n\nconst propTypes = {\n  initialXml: PropTypes.string,\n  toolboxConfiguration: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  workspaceConfiguration: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  className: PropTypes.string,\n  onWorkspaceChange: PropTypes.func,\n  onImportXmlError: PropTypes.func,\n  onXmlChange: PropTypes.func,\n  onInject: PropTypes.func,\n  onDispose: PropTypes.func,\n};\n\nconst defaultProps = {\n  initialXml: null,\n  toolboxConfiguration: null,\n  workspaceConfiguration: null,\n  className: null,\n  onWorkspaceChange: null,\n  onImportXmlError: null,\n  onXmlChange: null,\n  onInject: null,\n  onDispose: null,\n};\n\nfunction BlocklyWorkspace({\n  initialXml,\n  toolboxConfiguration,\n  workspaceConfiguration,\n  className,\n  onWorkspaceChange,\n  onXmlChange,\n  onImportXmlError,\n  onInject,\n  onDispose,\n}) {\n  const editorDiv = React.useRef(null);\n  const { xml } = useBlocklyWorkspace({\n    ref: editorDiv,\n    initialXml,\n    toolboxConfiguration,\n    workspaceConfiguration,\n    onWorkspaceChange,\n    onImportXmlError,\n    onInject,\n    onDispose,\n  });\n  const onXmlChangeRef = React.useRef(onXmlChange);\n  React.useEffect(() => {\n    onXmlChangeRef.current = onXmlChange;\n  }, [onXmlChange]);\n  React.useEffect(() => {\n    if (onXmlChangeRef.current && xml) {\n      onXmlChangeRef.current(xml);\n    }\n  }, [xml]);\n\n  return <div className={className} ref={editorDiv} />;\n}\n\nBlocklyWorkspace.propTypes = propTypes;\nBlocklyWorkspace.defaultProps = defaultProps;\n\nexport default BlocklyWorkspace;\n","const INITIAL_XML =\n  '<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"text_print\" id=\"/.o;xPY6dEFHu6(|-Ny-\" x=\"248\" y=\"79\"><value name=\"TEXT\"><shadow type=\"text\" id=\"At$Jca1#A-%cmtwX^lF(\"><field name=\"TEXT\">Hello</field></shadow></value></block></xml>';\n\nconst INITIAL_TOOLBOX_JSON = {\n  kind: \"categoryToolbox\",\n  contents: [\n    {\n      kind: \"category\",\n      name: \"Quản lý tệp\",\n      colour: 160,\n      contents: [\n        {\n          kind: \"button\",\n          text: \"Lưu chương trình\",\n          callbackKey: \"saveFile\",\n        },\n      ],\n    },\n    { kind: \"sep\" },\n    {\n      kind: \"category\",\n      name: \"Logic\",\n      colour: 210,\n      contents: [\n        {\n          kind: \"block\",\n          type: \"controls_if\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"logic_compare\"><field name=\"OP\">EQ</field></block>',\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"logic_operation\"><field name=\"OP\">AND</field></block>',\n        },\n        {\n          kind: \"block\",\n          type: \"logic_negate\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block>',\n        },\n        {\n          kind: \"block\",\n          type: \"logic_null\",\n        },\n        {\n          kind: \"block\",\n          type: \"logic_ternary\",\n        },\n      ],\n    },\n    {\n      kind: \"category\",\n      name: \"Vòng lặp\",\n      colour: 120,\n      contents: [\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"controls_repeat_ext\">\\n' +\n            '      <value name=\"TIMES\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">10</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"controls_whileUntil\">\\n' +\n            '      <field name=\"MODE\">WHILE</field>\\n' +\n            \"    </block>\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"controls_for\">\\n' +\n            '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' +\n            '      <value name=\"FROM\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">1</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"TO\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">10</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"BY\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">1</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"controls_forEach\">\\n' +\n            '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"controls_flow_statements\">\\n' +\n            '      <field name=\"FLOW\">BREAK</field>\\n' +\n            \"    </block>\\n\",\n        },\n      ],\n    },\n    {\n      kind: \"category\",\n      name: \"Phép toán\",\n      colour: 230,\n      contents: [\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_round\">\\n' +\n            '      <field name=\"OP\">ROUND</field>\\n' +\n            '      <value name=\"NUM\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">3.1</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_number\">\\n' +\n            '      <field name=\"NUM\">0</field>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_single\">\\n' +\n            '      <field name=\"OP\">ROOT</field>\\n' +\n            '      <value name=\"NUM\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">9</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_trig\">\\n' +\n            '      <field name=\"OP\">SIN</field>\\n' +\n            '      <value name=\"NUM\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">45</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_constant\">\\n' +\n            '      <field name=\"CONSTANT\">PI</field>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_number_property\">\\n' +\n            '      <mutation divisor_input=\"false\"></mutation>\\n' +\n            '      <field name=\"PROPERTY\">EVEN</field>\\n' +\n            '      <value name=\"NUMBER_TO_CHECK\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">0</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_arithmetic\">\\n' +\n            '      <field name=\"OP\">ADD</field>\\n' +\n            '      <value name=\"A\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">1</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"B\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">1</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_on_list\">\\n' +\n            '      <mutation op=\"SUM\"></mutation>\\n' +\n            '      <field name=\"OP\">SUM</field>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_modulo\">\\n' +\n            '      <value name=\"DIVIDEND\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">64</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"DIVISOR\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">10</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_constrain\">\\n' +\n            '      <value name=\"VALUE\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">50</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"LOW\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">1</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"HIGH\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">100</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_random_int\">\\n' +\n            '      <value name=\"FROM\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">1</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"TO\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">100</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          type: \"math_random_float\",\n        },\n      ],\n    },\n    {\n      kind: \"category\",\n      name: \"Văn bản\",\n      colour: 160,\n      contents: [\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_charAt\">\\n' +\n            '      <mutation at=\"true\"></mutation>\\n' +\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\n            '      <value name=\"VALUE\">\\n' +\n            '        <block type=\"variables_get\">\\n' +\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\n            \"        </block>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text\">\\n' +\n            '      <field name=\"TEXT\"></field>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_print\">\\n' +\n            '      <value name=\"TEXT\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\">abc</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_append\">\\n' +\n            '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' +\n            '      <value name=\"TEXT\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\"></field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_length\">\\n' +\n            '      <value name=\"VALUE\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\">abc</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_isEmpty\">\\n' +\n            '      <value name=\"VALUE\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\"></field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_indexOf\">\\n' +\n            '      <field name=\"END\">FIRST</field>\\n' +\n            '      <value name=\"VALUE\">\\n' +\n            '        <block type=\"variables_get\">\\n' +\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\n            \"        </block>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"FIND\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\">abc</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_join\">\\n' +\n            '      <mutation items=\"2\"></mutation>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_getSubstring\">\\n' +\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\n            '      <value name=\"STRING\">\\n' +\n            '        <block type=\"variables_get\">\\n' +\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\n            \"        </block>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_changeCase\">\\n' +\n            '      <field name=\"CASE\">UPPERCASE</field>\\n' +\n            '      <value name=\"TEXT\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\">abc</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_trim\">\\n' +\n            '      <field name=\"MODE\">BOTH</field>\\n' +\n            '      <value name=\"TEXT\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\">abc</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_prompt_ext\">\\n' +\n            '      <mutation type=\"TEXT\"></mutation>\\n' +\n            '      <field name=\"TYPE\">TEXT</field>\\n' +\n            '      <value name=\"TEXT\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\">abc</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n      ],\n    },\n    {\n      kind: \"category\",\n      name: \"Danh sách\",\n      colour: 259,\n      contents: [\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_indexOf\">\\n' +\n            '      <field name=\"END\">FIRST</field>\\n' +\n            '      <value name=\"VALUE\">\\n' +\n            '        <block type=\"variables_get\">\\n' +\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n            \"        </block>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_create_with\">\\n' +\n            '      <mutation items=\"0\"></mutation>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_repeat\">\\n' +\n            '      <value name=\"NUM\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">5</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          type: \"lists_length\",\n        },\n        {\n          kind: \"block\",\n          type: \"lists_isEmpty\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_create_with\">\\n' +\n            '      <mutation items=\"3\"></mutation>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_getIndex\">\\n' +\n            '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' +\n            '      <field name=\"MODE\">GET</field>\\n' +\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\n            '      <value name=\"VALUE\">\\n' +\n            '        <block type=\"variables_get\">\\n' +\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n            \"        </block>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_setIndex\">\\n' +\n            '      <mutation at=\"true\"></mutation>\\n' +\n            '      <field name=\"MODE\">SET</field>\\n' +\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\n            '      <value name=\"LIST\">\\n' +\n            '        <block type=\"variables_get\">\\n' +\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n            \"        </block>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_getSublist\">\\n' +\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\n            '      <value name=\"LIST\">\\n' +\n            '        <block type=\"variables_get\">\\n' +\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n            \"        </block>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_split\">\\n' +\n            '      <mutation mode=\"SPLIT\"></mutation>\\n' +\n            '      <field name=\"MODE\">SPLIT</field>\\n' +\n            '      <value name=\"DELIM\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\">,</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_sort\">\\n' +\n            '      <field name=\"TYPE\">NUMERIC</field>\\n' +\n            '      <field name=\"DIRECTION\">1</field>\\n' +\n            \"    </block>\\n\",\n        },\n      ],\n    },\n    {\n      kind: \"category\",\n      name: \"Màu sắc\",\n      colour: 19,\n      contents: [\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"colour_picker\">\\n' +\n            '      <field name=\"COLOUR\">#ff0000</field>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          type: \"colour_random\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"colour_rgb\">\\n' +\n            '      <value name=\"RED\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">100</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"GREEN\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">50</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"BLUE\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">0</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"colour_blend\">\\n' +\n            '      <value name=\"COLOUR1\">\\n' +\n            '        <shadow type=\"colour_picker\">\\n' +\n            '          <field name=\"COLOUR\">#ff0000</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"COLOUR2\">\\n' +\n            '        <shadow type=\"colour_picker\">\\n' +\n            '          <field name=\"COLOUR\">#3333ff</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"RATIO\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">0.5</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n      ],\n    },\n    { kind: \"sep\" },\n    {\n      kind: \"category\",\n      name: \"Biến\",\n      custom: \"VARIABLE\",\n      colour: 330,\n    },\n    {\n      kind: \"category\",\n      name: \"Hàm\",\n      custom: \"PROCEDURE\",\n      colour: 290,\n    },\n    { kind: \"sep\" },\n    {\n      kind: \"category\",\n      name: \"Nhóm Điều Khiển\",\n      colour: 19,\n      contents: [\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"thang\"><field name=\"THANG\">100</field></block>',\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"trai\"><field name=\"TRAI\">90</field></block>',\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"phai\"><field name=\"PHAI\">90</field></block>',\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"doi\"><field name=\"MILISECONDS\">1000</field></block>',\n        },\n      ],\n    },\n    { kind: \"sep\" },\n    {\n      kind: \"category\",\n      name: \"Output thiết bị\",\n      colour: 220,\n      contents: [\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"manhinh\"><field name=\"MANHINH\">Danh</field></block>',\n        }\n      ],\n    },\n  ],\n};\n\nconst INITIAL_TOOLBOX_XML =\n  '<xml xmlns=\"http://www.w3.org/1999/xhtml\" id=\"toolbox\" style=\"display: none;\">\\n' +\n  '  <category name=\"Logic\" colour=\"#5C81A6\">\\n' +\n  '    <block type=\"controls_if\"></block>\\n' +\n  '    <block type=\"logic_compare\">\\n' +\n  '      <field name=\"OP\">EQ</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"logic_operation\">\\n' +\n  '      <field name=\"OP\">AND</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"logic_negate\"></block>\\n' +\n  '    <block type=\"logic_boolean\">\\n' +\n  '      <field name=\"BOOL\">TRUE</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"logic_null\"></block>\\n' +\n  '    <block type=\"logic_ternary\"></block>\\n' +\n  \"  </category>\\n\" +\n  '  <category name=\"Loops\" colour=\"#5CA65C\">\\n' +\n  '    <block type=\"controls_repeat_ext\">\\n' +\n  '      <value name=\"TIMES\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">10</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"controls_whileUntil\">\\n' +\n  '      <field name=\"MODE\">WHILE</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"controls_for\">\\n' +\n  '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' +\n  '      <value name=\"FROM\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">1</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"TO\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">10</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"BY\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">1</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"controls_forEach\">\\n' +\n  '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"controls_flow_statements\">\\n' +\n  '      <field name=\"FLOW\">BREAK</field>\\n' +\n  \"    </block>\\n\" +\n  \"  </category>\\n\" +\n  '  <category name=\"Math\" colour=\"#5C68A6\">\\n' +\n  '    <block type=\"math_round\">\\n' +\n  '      <field name=\"OP\">ROUND</field>\\n' +\n  '      <value name=\"NUM\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">3.1</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_number\">\\n' +\n  '      <field name=\"NUM\">0</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"math_single\">\\n' +\n  '      <field name=\"OP\">ROOT</field>\\n' +\n  '      <value name=\"NUM\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">9</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_trig\">\\n' +\n  '      <field name=\"OP\">SIN</field>\\n' +\n  '      <value name=\"NUM\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">45</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_constant\">\\n' +\n  '      <field name=\"CONSTANT\">PI</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"math_number_property\">\\n' +\n  '      <mutation divisor_input=\"false\"></mutation>\\n' +\n  '      <field name=\"PROPERTY\">EVEN</field>\\n' +\n  '      <value name=\"NUMBER_TO_CHECK\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">0</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_arithmetic\">\\n' +\n  '      <field name=\"OP\">ADD</field>\\n' +\n  '      <value name=\"A\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">1</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"B\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">1</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_on_list\">\\n' +\n  '      <mutation op=\"SUM\"></mutation>\\n' +\n  '      <field name=\"OP\">SUM</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"math_modulo\">\\n' +\n  '      <value name=\"DIVIDEND\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">64</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"DIVISOR\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">10</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_constrain\">\\n' +\n  '      <value name=\"VALUE\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">50</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"LOW\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">1</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"HIGH\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">100</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_random_int\">\\n' +\n  '      <value name=\"FROM\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">1</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"TO\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">100</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_random_float\"></block>\\n' +\n  \"  </category>\\n\" +\n  '  <category name=\"Text\" colour=\"#5CA68D\">\\n' +\n  '    <block type=\"text_charAt\">\\n' +\n  '      <mutation at=\"true\"></mutation>\\n' +\n  '      <field name=\"WHERE\">FROM_START</field>\\n' +\n  '      <value name=\"VALUE\">\\n' +\n  '        <block type=\"variables_get\">\\n' +\n  '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\n  \"        </block>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text\">\\n' +\n  '      <field name=\"TEXT\"></field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"text_append\">\\n' +\n  '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' +\n  '      <value name=\"TEXT\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\"></field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_length\">\\n' +\n  '      <value name=\"VALUE\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\">abc</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_isEmpty\">\\n' +\n  '      <value name=\"VALUE\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\"></field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_indexOf\">\\n' +\n  '      <field name=\"END\">FIRST</field>\\n' +\n  '      <value name=\"VALUE\">\\n' +\n  '        <block type=\"variables_get\">\\n' +\n  '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\n  \"        </block>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"FIND\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\">abc</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_join\">\\n' +\n  '      <mutation items=\"2\"></mutation>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"text_getSubstring\">\\n' +\n  '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\n  '      <field name=\"WHERE1\">FROM_START</field>\\n' +\n  '      <field name=\"WHERE2\">FROM_START</field>\\n' +\n  '      <value name=\"STRING\">\\n' +\n  '        <block type=\"variables_get\">\\n' +\n  '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\n  \"        </block>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_changeCase\">\\n' +\n  '      <field name=\"CASE\">UPPERCASE</field>\\n' +\n  '      <value name=\"TEXT\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\">abc</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_trim\">\\n' +\n  '      <field name=\"MODE\">BOTH</field>\\n' +\n  '      <value name=\"TEXT\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\">abc</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_print\">\\n' +\n  '      <value name=\"TEXT\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\">abc</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_prompt_ext\">\\n' +\n  '      <mutation type=\"TEXT\"></mutation>\\n' +\n  '      <field name=\"TYPE\">TEXT</field>\\n' +\n  '      <value name=\"TEXT\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\">abc</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  \"  </category>\\n\" +\n  '  <category name=\"Lists\" colour=\"#745CA6\">\\n' +\n  '    <block type=\"lists_indexOf\">\\n' +\n  '      <field name=\"END\">FIRST</field>\\n' +\n  '      <value name=\"VALUE\">\\n' +\n  '        <block type=\"variables_get\">\\n' +\n  '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n  \"        </block>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_create_with\">\\n' +\n  '      <mutation items=\"0\"></mutation>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_repeat\">\\n' +\n  '      <value name=\"NUM\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">5</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_length\"></block>\\n' +\n  '    <block type=\"lists_isEmpty\"></block>\\n' +\n  '    <block type=\"lists_create_with\">\\n' +\n  '      <mutation items=\"3\"></mutation>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_getIndex\">\\n' +\n  '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' +\n  '      <field name=\"MODE\">GET</field>\\n' +\n  '      <field name=\"WHERE\">FROM_START</field>\\n' +\n  '      <value name=\"VALUE\">\\n' +\n  '        <block type=\"variables_get\">\\n' +\n  '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n  \"        </block>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_setIndex\">\\n' +\n  '      <mutation at=\"true\"></mutation>\\n' +\n  '      <field name=\"MODE\">SET</field>\\n' +\n  '      <field name=\"WHERE\">FROM_START</field>\\n' +\n  '      <value name=\"LIST\">\\n' +\n  '        <block type=\"variables_get\">\\n' +\n  '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n  \"        </block>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_getSublist\">\\n' +\n  '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\n  '      <field name=\"WHERE1\">FROM_START</field>\\n' +\n  '      <field name=\"WHERE2\">FROM_START</field>\\n' +\n  '      <value name=\"LIST\">\\n' +\n  '        <block type=\"variables_get\">\\n' +\n  '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n  \"        </block>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_split\">\\n' +\n  '      <mutation mode=\"SPLIT\"></mutation>\\n' +\n  '      <field name=\"MODE\">SPLIT</field>\\n' +\n  '      <value name=\"DELIM\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\">,</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_sort\">\\n' +\n  '      <field name=\"TYPE\">NUMERIC</field>\\n' +\n  '      <field name=\"DIRECTION\">1</field>\\n' +\n  \"    </block>\\n\" +\n  \"  </category>\\n\" +\n  '  <category name=\"Colour\" colour=\"#A6745C\">\\n' +\n  '    <block type=\"colour_picker\">\\n' +\n  '      <field name=\"COLOUR\">#ff0000</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"colour_random\"></block>\\n' +\n  '    <block type=\"colour_rgb\">\\n' +\n  '      <value name=\"RED\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">100</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"GREEN\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">50</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"BLUE\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">0</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"colour_blend\">\\n' +\n  '      <value name=\"COLOUR1\">\\n' +\n  '        <shadow type=\"colour_picker\">\\n' +\n  '          <field name=\"COLOUR\">#ff0000</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"COLOUR2\">\\n' +\n  '        <shadow type=\"colour_picker\">\\n' +\n  '          <field name=\"COLOUR\">#3333ff</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"RATIO\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">0.5</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  \"  </category>\\n\" +\n  \"  <sep></sep>\\n\" +\n  '  <category name=\"Custom Button\" colour=\"#A6745C\">\\n' +\n  '    <button text=\"A button\" callbackKey=\"myFirstButtonPressed\"></button>\\n' +\n  \"  </category>\\n\" +\n  '  <category name=\"Variables\" colour=\"#A65C81\" custom=\"VARIABLE\"></category>\\n' +\n  '  <category name=\"Functions\" colour=\"#9A5CA6\" custom=\"PROCEDURE\"></category>\\n' +\n  \"</xml>\";\n\n\nconst INITIAL_TOOLBOX_CATEGORIES = [\n  {\n    name: \"Controls\",\n    blocks: [\n      { type: \"controls_if\" },\n      {\n        type: \"controls_repeat_ext\",\n        values: {\n          TIMES: {\n            type: \"math_number\",\n            shadow: true,\n            fields: {\n              NUM: 10,\n            },\n          },\n        },\n        statements: {\n          DO: {\n            type: \"text_print\",\n            shadow: true,\n            values: {\n              TEXT: {\n                type: \"text\",\n                shadow: true,\n                fields: {\n                  TEXT: \"abc\",\n                },\n              },\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    name: \"Text\",\n    blocks: [\n      { type: \"text\" },\n      {\n        type: \"text_print\",\n        values: {\n          TEXT: {\n            type: \"text\",\n            shadow: true,\n            fields: {\n              TEXT: \"abc\",\n            },\n          },\n        },\n      },\n    ],\n  },\n];\n\nconst ConfigFiles = {\n  INITIAL_XML,\n  INITIAL_TOOLBOX_XML,\n  INITIAL_TOOLBOX_JSON,\n  INITIAL_TOOLBOX_CATEGORIES,\n};\n\nexport default ConfigFiles;\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport React, { useRef, useState } from \"react\";\nimport Blockly from \"blockly\";\nimport * as Vi from 'blockly/msg/vi';\n\nimport { BlocklyWorkspace } from \"./index-workspace\";\nimport ConfigFiles from \"./initContent/content\";\n\nimport Button from 'react-bootstrap/Button';\nimport Interpreter from 'js-interpreter';\nimport { Spinner } from 'react-bootstrap'\n\n\n\nconst App = () => {\n  const [toolboxConfiguration, setToolboxConfiguration] = React.useState(\n    ConfigFiles.INITIAL_TOOLBOX_JSON\n  );\n  const btnRunRef = useRef()\n  const [xmlInject, setXmlInject] = useState()\n  const [run, setRun] = useState(false)\n  const [workspace, setWorkspace] = useState()\n  const [uartFeedback, setUartFeedback] = useState(false)\n\n\n  /**\n   * \n   * INIT API FOR CUSTOM FUNCTION\n   * \n   */\n  Blockly.setLocale(Vi)\n  Blockly.JavaScript.STATEMENT_PREFIX = 'highlightBlock(%1);\\n';\n  // Blockly.JavaScript.STATEMENT_SUFFIX = 'waitForResponse();\\n';\n\n  Blockly.JavaScript.INFINITE_LOOP_TRAP = 'if(--LoopTrap == 0) { window.alert(\"Bạn đã đạt số vòng lặp tối đa (100 loops)\"); \\n throw \"Infinite loop.\"};\\n';\n\n  function initApi(interpreter, globalObject) {\n    // Add an API function for highlighting blocks.\n    // Add an API function for the alert() block.\n    Blockly.JavaScript.addReservedWords('alert');\n    Blockly.JavaScript.addReservedWords('log');\n    Blockly.JavaScript.addReservedWords('prompt');\n    Blockly.JavaScript.addReservedWords('highlightBlock');\n    Blockly.JavaScript.addReservedWords('waitForSeconds');\n    Blockly.JavaScript.addReservedWords('resetHighLight');\n    Blockly.JavaScript.addReservedWords('thang');\n    Blockly.JavaScript.addReservedWords('trai');\n    Blockly.JavaScript.addReservedWords('phai');\n    Blockly.JavaScript.addReservedWords('print');\n\n    var wrapper = function (text) {\n      return alert(arguments.length ? text : '');\n    };\n    interpreter.setProperty(globalObject, 'alert',\n      interpreter.createNativeFunction(wrapper));\n\n\n    wrapper = function (text) {\n      return console.log(arguments.length ? text : '');\n    };\n    interpreter.setProperty(globalObject, 'log',\n      interpreter.createNativeFunction(wrapper));\n\n    // Add an API function for the prompt() block.\n    wrapper = function (text) {\n      return prompt(text);\n    };\n    interpreter.setProperty(globalObject, 'prompt',\n      interpreter.createNativeFunction(wrapper));\n\n    wrapper = function (id) {\n      setUartFeedback(false)\n      return workspace.highlightBlock(id);\n    };\n    interpreter.setProperty(globalObject, 'highlightBlock',\n      interpreter.createNativeFunction(wrapper));\n\n    wrapper = function () {\n      setRun(false)\n      return workspace.highlightBlock(\"null\");\n    };\n    interpreter.setProperty(globalObject, 'resetHighlight',\n      interpreter.createNativeFunction(wrapper));\n\n    wrapper = interpreter.createAsyncFunction(\n      function (timeInSeconds, callback) {\n        // Delay the call to the callback.\n        setTimeout(callback, timeInSeconds);\n      });\n    interpreter.setProperty(globalObject, 'waitForSeconds', wrapper);\n\n    /**\n     * Bo chuyen dong\n     */\n\n    wrapper = function (num) {\n      try {\n        window.ReactNativeWebView.postMessage(\n          JSON.stringify({\n            REQUEST: 'UART',\n            DATA: 'f:' + num,\n          })\n        )\n      }\n      catch (error) {\n        alert(error)\n      }\n    };\n    interpreter.setProperty(globalObject, 'thang',\n      interpreter.createNativeFunction(wrapper));\n\n    wrapper = function (num) {\n      try {\n        window.ReactNativeWebView.postMessage(\n          JSON.stringify({\n            REQUEST: 'UART',\n            DATA: 'l:' + num,\n          })\n        )\n      }\n      catch (error) {\n        alert(error)\n      }\n    };\n    interpreter.setProperty(globalObject, 'trai',\n      interpreter.createNativeFunction(wrapper));\n\n    wrapper = function (num) {\n      try {\n        window.ReactNativeWebView.postMessage(\n          JSON.stringify({\n            REQUEST: 'UART',\n            DATA: 'r:' + num,\n          })\n        )\n      }\n      catch (error) {\n        alert(error)\n      }\n    };\n    interpreter.setProperty(globalObject, 'phai',\n      interpreter.createNativeFunction(wrapper));\n    \n    \n    wrapper = function (text) {\n      console.log('in:' + text)\n      try {\n        window.ReactNativeWebView.postMessage(\n          JSON.stringify({\n            REQUEST: 'UART',\n            DATA: 'in:' + text,\n          })\n        )\n      }\n      catch (error) {\n        alert(error)\n      }\n    };\n    interpreter.setProperty(globalObject, 'print',\n      interpreter.createNativeFunction(wrapper));\n\n  }\n\n\n\n\n  /**\n   * Inject custion features when component loaded\n   */\n\n\n  React.useEffect(() => {\n\n    if (!localStorage.getItem('initxml')) {\n      try {\n        window.ReactNativeWebView.postMessage(\"xml default...\")\n      } catch (e) { alert(\"Chưa kết nối với thiết bị webview\") }\n      setXmlInject(ConfigFiles.INITIAL_XML)\n    } else {\n      try {\n        window.ReactNativeWebView.postMessage(\"xml injected!\")\n      } catch (e) { alert(\"Chưa kết nối với thiết bị webview\") }\n      var CryptoJS = require(\"crypto-js\");\n      // Decrypt\n      var bytes = CryptoJS.AES.decrypt(localStorage.getItem('initxml'), 'thanhdanh');\n      var originalText = bytes.toString(CryptoJS.enc.Utf8);\n      // console.log({ INJECT: originalText })\n      //console.log(originalText); // 'my message'\n      setXmlInject(originalText)\n    }\n\n    // var myCode = 'alert(url);';\n    // var initFunc = function (interpreter, globalObject) {\n    //   var wrapper = function alert(text) {\n    //     return window.alert(text);\n    //   };\n    //   interpreter.setProperty(globalObject, 'alert',\n    //     interpreter.createNativeFunction(wrapper));\n    // };\n    // var myInterpreter = new Interpreter(myCode, initFunc);\n    // window.setTimeout(() => {\n    //   setToolboxConfiguration((prevConfig) => ({\n    //     ...prevConfig,\n    //     contents: [\n    //       ...prevConfig.contents,\n    //       {\n    //         kind: \"category\",\n    //         name: \"Them vao sau 2 giay\",\n    //         contents: [\n    //           { kind: \"block\", type: \"text\" },\n\n    //         ],\n    //         colour: 100\n    //       },\n    //     ],\n    //   }));\n    // }, 2000);\n\n    // window.setTimeout(() => {\n    //   setToolboxConfiguration((prevConfig) => ({\n    //     ...prevConfig,\n    //     contents: [\n    //       ...prevConfig.contents.slice(0, prevConfig.contents.length - 1),\n    //     ],\n    //   }));\n    // }, 4000);\n\n\n\n\n    //CUSTOM GIU THANG\n    const thang = {\n      \"type\": \"thang\",\n      \"message0\": \"Giữ thẳng %1 %2 mm\",\n      \"args0\": [\n        {\n          \"type\": \"input_dummy\"\n        },\n        {\n          \"type\": \"field_number\",\n          \"name\": \"THANG\",\n          \"value\": 0,\n          \"precision\": 1\n        }\n      ],\n      \"inputsInline\": true,\n      \"previousStatement\": null,\n      \"nextStatement\": null,\n      \"colour\": 75,\n      \"tooltip\": \"Giữ đai sắt thẳng với trong ... giây, độ chính xác milimét\",\n      \"helpUrl\": \"\"\n    }\n    Blockly.Blocks['thang'] = {\n      init: function () {\n        this.jsonInit(thang);\n        // Assign 'this' to a variable for use in the tooltip closure below.\n      }\n    };\n\n    Blockly.JavaScript['thang'] = function (block) {\n      var number_thang = block.getFieldValue('THANG');\n      // TODO: Assemble JavaScript into code variable.\n      var code = 'thang(' + number_thang + ')\\n';\n      return code;\n    };\n\n\n    //CUSTOM UON TRAI\n    const trai = {\n      \"type\": \"trai\",\n      \"message0\": \"Uốn trái %1 %2 độ\",\n      \"args0\": [\n        {\n          \"type\": \"input_dummy\"\n        },\n        {\n          \"type\": \"field_number\",\n          \"name\": \"TRAI\",\n          \"value\": 0,\n          \"precision\": 1\n        }\n      ],\n      \"inputsInline\": true,\n      \"previousStatement\": null,\n      \"nextStatement\": null,\n      \"colour\": 0,\n      \"tooltip\": \"Uốn trái đai sắt trong ... giây, độ chính xác 1 độ\",\n      \"helpUrl\": \"\"\n    }\n    Blockly.Blocks['trai'] = {\n      init: function () {\n        this.jsonInit(trai);\n        // Assign 'this' to a variable for use in the tooltip closure below.\n      }\n    };\n\n    Blockly.JavaScript['trai'] = function (block) {\n      var number_trai = block.getFieldValue('TRAI');\n      // TODO: Assemble JavaScript into code variable.\n      var code = 'trai(' + number_trai + ')\\n';\n      return code;\n    };\n\n\n    //CUSTOM UON PHAI\n    const phai = {\n      \"type\": \"phai\",\n      \"message0\": \"Uốn phải %1 %2 độ\",\n      \"args0\": [\n        {\n          \"type\": \"input_dummy\"\n        },\n        {\n          \"type\": \"field_number\",\n          \"name\": \"PHAI\",\n          \"value\": 0,\n          \"precision\": 1\n        }\n      ],\n      \"inputsInline\": true,\n      \"previousStatement\": null,\n      \"nextStatement\": null,\n      \"colour\": 0,\n      \"tooltip\": \"Uốn phải đai sắt trong ... giây, độ chính xác 1 độ\",\n      \"helpUrl\": \"\"\n    }\n    Blockly.Blocks['phai'] = {\n      init: function () {\n        this.jsonInit(phai);\n        // Assign 'this' to a variable for use in the tooltip closure below.\n      }\n    };\n\n    Blockly.JavaScript['phai'] = function (block) {\n      var number_trai = block.getFieldValue('PHAI');\n      // TODO: Assemble JavaScript into code variable.\n      var code = 'phai(' + number_trai + ')\\n';\n      return code;\n    };\n\n\n  }, []);\n\n  //CUSTOM DOI\n\n  const doi = {\n    \"type\": \"doi\",\n    \"message0\": \"đợi %1 mili-giây\",\n    \"args0\": [{\n      type: \"field_number\",\n      name: \"MILISECONDS\",\n      min: 0,\n      max: 600000,\n      value: 1\n    }],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"colour\": 120,\n    \"tooltip\": \"Dừng hoạt động trong ... mili-giây, tối đa 10 phút (60 *10 * 1000)\",\n    \"helpUrl\": \"\"\n  }\n  Blockly.Blocks['doi'] = {\n    init: function () {\n      this.jsonInit(doi);\n      // Assign 'this' to a variable for use in the tooltip closure below.\n    }\n  };\n\n  Blockly.JavaScript['doi'] = function (block) {\n    var seconds = Number(block.getFieldValue('MILISECONDS'));\n    var code = 'waitForSeconds(' + seconds + ');\\n';\n    return code;\n  };\n\n  //CUSTOM MAN HINH\n  const manhinh = {\n    \"type\": \"manhinh\",\n    \"message0\": \"In lên màn hình thiết bị chữ %1\",\n    \"args0\": [{\n      type: \"field_input\",\n      name: \"MANHINH\",\n      text: \"Danh\"\n    }],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"colour\": 90,\n    \"tooltip\": \"In lên màn hình thiết bị chữ ...\",\n    \"helpUrl\": \"\"\n  }\n  Blockly.Blocks['manhinh'] = {\n    init: function () {\n      this.jsonInit(manhinh);\n      // Assign 'this' to a variable for use in the tooltip closure below.\n    }\n  };\n\n  Blockly.JavaScript['manhinh'] = function (block) {\n    var text = block.getFieldValue('MANHINH');\n    var code = 'print(\"' + text + '\");\\n';\n    return code;\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n  const onWorkspaceChange = React.useCallback((workspace) => {\n\n\n    workspace.registerButtonCallback(\"saveFile\", () => {\n      try {\n        var CryptoJS = require(\"crypto-js\");\n        var ciphertext = CryptoJS.AES.encrypt(document.getElementById('debug-div').innerText, 'thanhdanh').toString();\n        // console.log({ SAVE: ciphertext })\n\n        window.ReactNativeWebView.postMessage(\n          JSON.stringify({\n            REQUEST: \"SAVE\",\n            DATA: ciphertext,\n            OK: true,\n          })\n        )\n      }\n      catch (error) {\n        alert(\"Chưa kết nối với thiết bị webview\")\n      }\n      // alert(\"Chương trình đã được lưu\");\n    });\n    setWorkspace(workspace)\n  }, []);\n\n  const onXmlChange = React.useCallback((newXml) => {\n    document.getElementById('debug-div').innerText = newXml;\n  }, []);\n\n  const handleView = (e) => {\n    // try { window.ReactNativeWebView.postMessage(code) }\n    // catch (error) {\n    //   alert(error)\n    // }\n    let element = document.getElementsByClassName(\"blocklyToolboxDiv\")[0];\n    if (element.style.opacity === '0') {\n\n      element.style.opacity = '1';\n      setTimeout(() => {\n        element.style.display = 'block';\n        window.dispatchEvent(new Event('resize'));\n      }, 300)\n    }\n    else {\n      element.style.opacity = '0'\n      setTimeout(() => {\n        element.style.display = 'none';\n        window.dispatchEvent(new Event('resize'));\n      }, 300)\n    }\n  }\n\n  const handleRun = (e) => {\n    if (run) {\n      setRun(false);\n      document.getElementById('isRunNow').innerText = '';\n      workspace.highlightBlock(\"null\");\n      return;\n    }\n    else {\n      document.getElementById('isRunNow').innerText = 'run';\n      setRun(true)\n    }\n    let code = Blockly.JavaScript.workspaceToCode(workspace);\n    code = 'var LoopTrap = 100; \\n' + code + '\\n resetHighlight(); \\n';\n    console.log(code)\n    var myInterpreter = new Interpreter(code, initApi);\n    function nextStep() {\n      if (myInterpreter.step()) {\n\n        // await (async function () {\n        //   return new Promise((resolve, reject) => {\n        //     window.setInterval(() => {\n        //       if (uartFeedback)\n        //         resolve(true)\n        //     }, 10)\n        //     window.setTimeout(() => { resolve(false) }, 5000)\n        //   }).then((result) => {\n        //     if (result)\n        //       nextStep();\n        //     else {\n        //       console.log(\"TIME OUT\")\n        //     }\n        //   })\n        // })()\n\n        if (document.getElementById('isRunNow').innerText) window.setTimeout(nextStep, 0);\n      }\n    }\n    nextStep();\n  }\n\n  return (\n    <>\n      <div id=\"isRunNow\" style={{ display: 'none'}}>\n        \n      </div>\n      {xmlInject && <div>\n\n        <div className=\"btn-wrapper-view\">\n          <Button onClick={handleView} variant=\"outline-warning material-icons dodgerblue i-large\" className=\"btn-circle\">unfold_more</Button>\n        </div>\n        <div className=\"btn-wrapper\">\n          <Button ref={btnRunRef} disabled={false} onClick={handleRun} variant=\"outline-warning\" className=\"btn-circle material-icons dodgerblue i-large\">{run ? \"more_horiz\" : \"flag\"}</Button>\n        </div>\n        <div className=\"btn-wrapper-uart\">\n          <Button onClick={() => {\n            try {\n              window.ReactNativeWebView.postMessage(\n                JSON.stringify({\n                  REQUEST: \"CHECK\",\n                })\n              )\n            }\n            catch (error) {\n              alert(\"Chưa kết nối với thiết bị webview\")\n            }\n          }} variant=\"outline-warning\" className=\"btn-circle material-icons dodgerblue i-large\">usb</Button>\n        </div>\n      </div>}\n\n      <div style={{ display: 'none' }} id='debug-div'>\n\n      </div>\n      {xmlInject && <BlocklyWorkspace\n        toolboxConfiguration={toolboxConfiguration}\n        workspaceConfiguration={{\n          // grid: {\n          //   spacing: 20,\n          //   length: 3,\n          //   colour: \"#ccc\",\n          //   snap: true,\n          // },\n          zoom: {\n            controls: true,\n            startScale: 1.0,\n            maxScale: 2,\n            minScale: 0.2,\n            scaleSpeed: 1.2,\n            pinch: true\n          },\n          horizontalLayout: true,\n          toolboxPosition: 'end',\n\n        }}\n        initialXml={xmlInject}\n        className=\"fill-height\"\n        onWorkspaceChange={onWorkspaceChange}\n        onXmlChange={onXmlChange}\n        onImportXmlError={() => alert(\"Không thể mở chương trình.\")}\n      />\n      }\n      {!xmlInject &&\n        <div className=\"spin-container\">\n          <Spinner animation=\"border\" variant=\"warning\" />\n\n          <div style={{ fontSize: 'large' }}>Đang tải...</div>\n        </div>}\n\n\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'material-icons/iconfont/material-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nwindow.addEventListener(\"load\", () => {\n    const editor = React.createElement(App);\n    ReactDOM.render(editor, document.getElementById(\"root\"));\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}