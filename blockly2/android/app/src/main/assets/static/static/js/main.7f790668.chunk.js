(this["webpackJsonpblockly-react-sample"]=this["webpackJsonpblockly-react-sample"]||[]).push([[0],{13:function(n,e,l){},25:function(n,e,l){"use strict";l.r(e);var o=l(0),t=l.n(o),a=l(8),i=l.n(a),c=(l(13),l(2)),d=l(5),m=l(1),u=l.n(m),k=(l(23),l(7));var r=function(n){var e=n.ref,l=n.initialXml,o=n.toolboxConfiguration,a=n.workspaceConfiguration,i=n.onWorkspaceChange,d=n.onImportXmlError,m=n.onInject,r=n.onDispose,s=t.a.useState(null),b=Object(c.a)(s,2),f=b[0],p=b[1],h=t.a.useState(l),y=Object(c.a)(h,2),v=y[0],_=y[1],x=t.a.useState(!1),T=Object(c.a)(x,2),E=T[0],g=T[1],w=t.a.useState(!1),O=Object(c.a)(w,2),R=O[0],I=O[1],N=t.a.useRef(a);t.a.useEffect((function(){N.current=a}),[a]);var U=t.a.useRef(o);t.a.useEffect((function(){U.current=o,o&&f&&f.updateToolbox(o)}),[o,f]);var L=t.a.useRef(m),M=t.a.useRef(r);t.a.useEffect((function(){L.current=m}),[m]),t.a.useEffect((function(){M.current=r}),[r]);var X=t.a.useCallback((function(n){i&&i(n)}),[i]);return t.a.useEffect((function(){var n=u.a.inject(e.current,Object(k.a)(Object(k.a)({},N.current),{},{toolbox:U.current}));p(n),g(!1),I(!1),L.current&&L.current(n);var l=M.current;return function(){n.dispose(),l&&l(n)}}),[e]),t.a.useEffect((function(){f&&!R&&X(f)}),[X,R,f]),t.a.useEffect((function(){if(null!=f){var n=function(){X(f)};return f.addChangeListener(n),function(){f.removeChangeListener(n)}}}),[f,X]),t.a.useEffect((function(){if(null!=f){var n=function(n,e){var l=null,o=null;return[function(){for(var t=arguments.length,a=new Array(t),i=0;i<t;i++)a[i]=arguments[i];o=function(){l=null,n.apply(void 0,a)},clearTimeout(l),l=setTimeout(o,e)},function(){null!==l&&(clearTimeout(l),o())}]}((function(){var n=u.a.Xml.domToText(u.a.Xml.workspaceToDom(f));n!==v&&_(n)}),200),e=Object(c.a)(n,2),l=e[0],o=e[1];return f.addChangeListener(l),function(){f.removeChangeListener(l),o()}}}),[f,v]),t.a.useEffect((function(){v&&f&&!E&&(function(n,e,l){try{return u.a.Xml.domToWorkspace(u.a.Xml.textToDom(n),e),!0}catch(o){return l&&l(o),!1}}(v,f,d)||_(null),g(!0))}),[v,f,E,d]),{workspace:f,xml:v}};function s(n){var e=n.initialXml,l=n.toolboxConfiguration,o=n.workspaceConfiguration,a=n.className,i=n.onWorkspaceChange,c=n.onXmlChange,m=n.onImportXmlError,u=n.onInject,k=n.onDispose,s=t.a.useRef(null),b=r({ref:s,initialXml:e,toolboxConfiguration:l,workspaceConfiguration:o,onWorkspaceChange:i,onImportXmlError:m,onInject:u,onDispose:k}).xml,f=t.a.useRef(c);return t.a.useEffect((function(){f.current=c}),[c]),t.a.useEffect((function(){f.current&&b&&f.current(b)}),[b]),Object(d.jsx)("div",{className:a,ref:s})}s.defaultProps={initialXml:null,toolboxConfiguration:null,workspaceConfiguration:null,className:null,onWorkspaceChange:null,onImportXmlError:null,onXmlChange:null,onInject:null,onDispose:null};var b=s,f={INITIAL_XML:'<xml xmlns="https://developers.google.com/blockly/xml"><block type="controls_whileUntil" id="L{5skzh{.8+YNyc-Z*5D" x="350" y="70"><field name="MODE">WHILE</field></block></xml>',INITIAL_TOOLBOX_XML:"",INITIAL_TOOLBOX_JSON:{kind:"categoryToolbox",contents:[{kind:"category",name:"Logic",colour:210,contents:[{kind:"block",type:"controls_if"},{kind:"block",blockxml:'<block type="logic_compare"><field name="OP">EQ</field></block>'},{kind:"block",blockxml:'<block type="logic_operation"><field name="OP">AND</field></block>'},{kind:"block",type:"logic_negate"},{kind:"block",blockxml:'<block type="logic_boolean"><field name="BOOL">TRUE</field></block>'},{kind:"block",type:"logic_null"},{kind:"block",type:"logic_ternary"}]},{kind:"category",name:"Loops",colour:120,contents:[{kind:"block",blockxml:'<block type="controls_repeat_ext">\n      <value name="TIMES">\n        <shadow type="math_number">\n          <field name="NUM">10</field>\n        </shadow>\n      </value>\n    </block>'},{kind:"block",blockxml:'    <block type="controls_whileUntil">\n      <field name="MODE">WHILE</field>\n    </block>'},{kind:"block",blockxml:'    <block type="controls_for">\n      <field name="VAR" id="C(8;cYCF}~vSgkxzJ+{O" variabletype="">i</field>\n      <value name="FROM">\n        <shadow type="math_number">\n          <field name="NUM">1</field>\n        </shadow>\n      </value>\n      <value name="TO">\n        <shadow type="math_number">\n          <field name="NUM">10</field>\n        </shadow>\n      </value>\n      <value name="BY">\n        <shadow type="math_number">\n          <field name="NUM">1</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="controls_forEach">\n      <field name="VAR" id="Cg!CSk/ZJo2XQN3=VVrz" variabletype="">j</field>\n    </block>\n'},{kind:"block",blockxml:'    <block type="controls_flow_statements">\n      <field name="FLOW">BREAK</field>\n    </block>\n'}]},{kind:"category",name:"Math",colour:230,contents:[{kind:"block",blockxml:'    <block type="math_round">\n      <field name="OP">ROUND</field>\n      <value name="NUM">\n        <shadow type="math_number">\n          <field name="NUM">3.1</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="math_number">\n      <field name="NUM">0</field>\n    </block>\n'},{kind:"block",blockxml:'    <block type="math_single">\n      <field name="OP">ROOT</field>\n      <value name="NUM">\n        <shadow type="math_number">\n          <field name="NUM">9</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="math_trig">\n      <field name="OP">SIN</field>\n      <value name="NUM">\n        <shadow type="math_number">\n          <field name="NUM">45</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="math_constant">\n      <field name="CONSTANT">PI</field>\n    </block>\n'},{kind:"block",blockxml:'    <block type="math_number_property">\n      <mutation divisor_input="false"></mutation>\n      <field name="PROPERTY">EVEN</field>\n      <value name="NUMBER_TO_CHECK">\n        <shadow type="math_number">\n          <field name="NUM">0</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="math_arithmetic">\n      <field name="OP">ADD</field>\n      <value name="A">\n        <shadow type="math_number">\n          <field name="NUM">1</field>\n        </shadow>\n      </value>\n      <value name="B">\n        <shadow type="math_number">\n          <field name="NUM">1</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="math_on_list">\n      <mutation op="SUM"></mutation>\n      <field name="OP">SUM</field>\n    </block>\n'},{kind:"block",blockxml:'    <block type="math_modulo">\n      <value name="DIVIDEND">\n        <shadow type="math_number">\n          <field name="NUM">64</field>\n        </shadow>\n      </value>\n      <value name="DIVISOR">\n        <shadow type="math_number">\n          <field name="NUM">10</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="math_constrain">\n      <value name="VALUE">\n        <shadow type="math_number">\n          <field name="NUM">50</field>\n        </shadow>\n      </value>\n      <value name="LOW">\n        <shadow type="math_number">\n          <field name="NUM">1</field>\n        </shadow>\n      </value>\n      <value name="HIGH">\n        <shadow type="math_number">\n          <field name="NUM">100</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="math_random_int">\n      <value name="FROM">\n        <shadow type="math_number">\n          <field name="NUM">1</field>\n        </shadow>\n      </value>\n      <value name="TO">\n        <shadow type="math_number">\n          <field name="NUM">100</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",type:"math_random_float"}]},{kind:"category",name:"Text",colour:160,contents:[{kind:"block",blockxml:'    <block type="text_charAt">\n      <mutation at="true"></mutation>\n      <field name="WHERE">FROM_START</field>\n      <value name="VALUE">\n        <block type="variables_get">\n          <field name="VAR" id="q@$ZF(L?Zo/z`d{o.Bp!" variabletype="">text</field>\n        </block>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="text">\n      <field name="TEXT"></field>\n    </block>\n'},{kind:"block",blockxml:'    <block type="text_append">\n      <field name="VAR" id=":};P,s[*|I8+L^-.EbRi" variabletype="">item</field>\n      <value name="TEXT">\n        <shadow type="text">\n          <field name="TEXT"></field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="text_length">\n      <value name="VALUE">\n        <shadow type="text">\n          <field name="TEXT">abc</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="text_isEmpty">\n      <value name="VALUE">\n        <shadow type="text">\n          <field name="TEXT"></field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="text_indexOf">\n      <field name="END">FIRST</field>\n      <value name="VALUE">\n        <block type="variables_get">\n          <field name="VAR" id="q@$ZF(L?Zo/z`d{o.Bp!" variabletype="">text</field>\n        </block>\n      </value>\n      <value name="FIND">\n        <shadow type="text">\n          <field name="TEXT">abc</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="text_join">\n      <mutation items="2"></mutation>\n    </block>\n'},{kind:"block",blockxml:'    <block type="text_getSubstring">\n      <mutation at1="true" at2="true"></mutation>\n      <field name="WHERE1">FROM_START</field>\n      <field name="WHERE2">FROM_START</field>\n      <value name="STRING">\n        <block type="variables_get">\n          <field name="VAR" id="q@$ZF(L?Zo/z`d{o.Bp!" variabletype="">text</field>\n        </block>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="text_changeCase">\n      <field name="CASE">UPPERCASE</field>\n      <value name="TEXT">\n        <shadow type="text">\n          <field name="TEXT">abc</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="text_trim">\n      <field name="MODE">BOTH</field>\n      <value name="TEXT">\n        <shadow type="text">\n          <field name="TEXT">abc</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="text_print">\n      <value name="TEXT">\n        <shadow type="text">\n          <field name="TEXT">abc</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="text_prompt_ext">\n      <mutation type="TEXT"></mutation>\n      <field name="TYPE">TEXT</field>\n      <value name="TEXT">\n        <shadow type="text">\n          <field name="TEXT">abc</field>\n        </shadow>\n      </value>\n    </block>\n'}]},{kind:"category",name:"Lists",colour:259,contents:[{kind:"block",blockxml:'    <block type="lists_indexOf">\n      <field name="END">FIRST</field>\n      <value name="VALUE">\n        <block type="variables_get">\n          <field name="VAR" id="e`(L;x,.j[[XN`F33Q5." variabletype="">list</field>\n        </block>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="lists_create_with">\n      <mutation items="0"></mutation>\n    </block>\n'},{kind:"block",blockxml:'    <block type="lists_repeat">\n      <value name="NUM">\n        <shadow type="math_number">\n          <field name="NUM">5</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",type:"lists_length"},{kind:"block",type:"lists_isEmpty"},{kind:"block",blockxml:'    <block type="lists_create_with">\n      <mutation items="3"></mutation>\n    </block>\n'},{kind:"block",blockxml:'    <block type="lists_getIndex">\n      <mutation statement="false" at="true"></mutation>\n      <field name="MODE">GET</field>\n      <field name="WHERE">FROM_START</field>\n      <value name="VALUE">\n        <block type="variables_get">\n          <field name="VAR" id="e`(L;x,.j[[XN`F33Q5." variabletype="">list</field>\n        </block>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="lists_setIndex">\n      <mutation at="true"></mutation>\n      <field name="MODE">SET</field>\n      <field name="WHERE">FROM_START</field>\n      <value name="LIST">\n        <block type="variables_get">\n          <field name="VAR" id="e`(L;x,.j[[XN`F33Q5." variabletype="">list</field>\n        </block>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="lists_getSublist">\n      <mutation at1="true" at2="true"></mutation>\n      <field name="WHERE1">FROM_START</field>\n      <field name="WHERE2">FROM_START</field>\n      <value name="LIST">\n        <block type="variables_get">\n          <field name="VAR" id="e`(L;x,.j[[XN`F33Q5." variabletype="">list</field>\n        </block>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="lists_split">\n      <mutation mode="SPLIT"></mutation>\n      <field name="MODE">SPLIT</field>\n      <value name="DELIM">\n        <shadow type="text">\n          <field name="TEXT">,</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="lists_sort">\n      <field name="TYPE">NUMERIC</field>\n      <field name="DIRECTION">1</field>\n    </block>\n'}]},{kind:"category",name:"Colour",colour:19,contents:[{kind:"block",blockxml:'    <block type="colour_picker">\n      <field name="COLOUR">#ff0000</field>\n    </block>\n'},{kind:"block",type:"colour_random"},{kind:"block",blockxml:'    <block type="colour_rgb">\n      <value name="RED">\n        <shadow type="math_number">\n          <field name="NUM">100</field>\n        </shadow>\n      </value>\n      <value name="GREEN">\n        <shadow type="math_number">\n          <field name="NUM">50</field>\n        </shadow>\n      </value>\n      <value name="BLUE">\n        <shadow type="math_number">\n          <field name="NUM">0</field>\n        </shadow>\n      </value>\n    </block>\n'},{kind:"block",blockxml:'    <block type="colour_blend">\n      <value name="COLOUR1">\n        <shadow type="colour_picker">\n          <field name="COLOUR">#ff0000</field>\n        </shadow>\n      </value>\n      <value name="COLOUR2">\n        <shadow type="colour_picker">\n          <field name="COLOUR">#3333ff</field>\n        </shadow>\n      </value>\n      <value name="RATIO">\n        <shadow type="math_number">\n          <field name="NUM">0.5</field>\n        </shadow>\n      </value>\n    </block>\n'}]},{kind:"sep"},{kind:"category",name:"Variables",custom:"VARIABLE",colour:330},{kind:"category",name:"Functions",custom:"PROCEDURE",colour:290},{kind:"sep"},{kind:"category",name:"Nh\xf3m chuy\u1ec3n \u0111\u1ed9ng",colour:19,contents:[{kind:"block",blockxml:'<block type="thang"><field name="THANG">5</field></block>'},{kind:"block",blockxml:'<block type="trai"><field name="TRAI">5</field></block>'},{kind:"block",blockxml:'<block type="phai"><field name="PHAI">5</field></block>'}]}]},INITIAL_TOOLBOX_CATEGORIES:[{name:"Controls",blocks:[{type:"controls_if"},{type:"controls_repeat_ext",values:{TIMES:{type:"math_number",shadow:!0,fields:{NUM:10}}},statements:{DO:{type:"text_print",shadow:!0,values:{TEXT:{type:"text",shadow:!0,fields:{TEXT:"abc"}}}}}}]},{name:"Text",blocks:[{type:"text"},{type:"text_print",values:{TEXT:{type:"text",shadow:!0,fields:{TEXT:"abc"}}}}]}]},p=function(){var n=t.a.useState(f.INITIAL_TOOLBOX_JSON),e=Object(c.a)(n,2),l=e[0];e[1];t.a.useEffect((function(){var n={type:"thang",message0:"Gi\u1eef th\u1eb3ng %1 %2 gi\xe2y",args0:[{type:"input_dummy"},{type:"field_number",name:"THANG",value:5,precision:.1}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:0,tooltip:"Gi\u1eef \u0111ai s\u1eaft th\u1eb3ng trong ... gi\xe2y, \u0111\u1ed9 ch\xednh x\xe1c 0.1s",helpUrl:""};u.a.Blocks.thang={init:function(){this.jsonInit(n)}},u.a.Python.thang=function(n){return"diThang("+n.getFieldValue("THANG")+")\n"};var e={type:"trai",message0:"U\u1ed1n tr\xe1i %1 %2 gi\xe2y",args0:[{type:"input_dummy"},{type:"field_number",name:"TRAI",value:5,precision:.1}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:0,tooltip:"U\u1ed1n tr\xe1i \u0111ai s\u1eaft trong ... gi\xe2y, \u0111\u1ed9 ch\xednh x\xe1c 0.1s",helpUrl:""};u.a.Blocks.trai={init:function(){this.jsonInit(e)}},u.a.Python.trai=function(n){return"uonTrai("+n.getFieldValue("TRAI")+")\n"};var l={type:"phai",message0:"U\u1ed1n ph\u1ea3i %1 %2 gi\xe2y",args0:[{type:"input_dummy"},{type:"field_number",name:"PHAI",value:5,precision:.1}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:0,tooltip:"U\u1ed1n ph\u1ea3i \u0111ai s\u1eaft trong ... gi\xe2y, \u0111\u1ed9 ch\xednh x\xe1c 0.1s",helpUrl:""};u.a.Blocks.phai={init:function(){this.jsonInit(l)}},u.a.Python.phai=function(n){return"uonTrai("+n.getFieldValue("PHAI")+")\n"}}),[]);var o=t.a.useCallback((function(n){n.registerButtonCallback("myFirstButtonPressed",(function(){alert("button is pressed")}));var e=u.a.Xml.domToText(u.a.Xml.workspaceToDom(n));console.log("XML workspace:",e);var l=u.a.Python.workspaceToCode(n);console.log("CODE:",l)}),[]),a=t.a.useCallback((function(n){console.log("XML change:",n)}),[]);return Object(d.jsx)(b,{toolboxConfiguration:l,workspaceConfiguration:{grid:{spacing:20,length:3,colour:"#ccc",snap:!0},zoom:{controls:!0,wheel:!0,startScale:1,maxScale:3,minScale:.3,scaleSpeed:1.2,pinch:!0}},initialXml:f.INITIAL_XML,className:"fill-height",onWorkspaceChange:o,onXmlChange:a})};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));window.addEventListener("load",(function(){var n=t.a.createElement(p);i.a.render(n,document.getElementById("root"))})),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(n){n.unregister()}))}},[[25,1,2]]]);
//# sourceMappingURL=main.7f790668.chunk.js.map