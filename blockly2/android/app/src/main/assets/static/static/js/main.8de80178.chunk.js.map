{"version":3,"sources":["App.js","useBlocklyWorkspace.js","debounce.jsx","BlocklyWorkspace.jsx","serviceWorker.js","index.js","initContent/content.jsx"],"names":["App","React","useState","ConfigFiles","INITIAL_TOOLBOX_JSON","toolboxConfiguration","setToolboxConfiguration","modalRef","code","setCode","xml","setXml","save","setSave","useEffect","Blockly","setLocale","Vi","thang","Blocks","init","this","jsonInit","JavaScript","block","getFieldValue","trai","phai","onWorkspaceChange","useCallback","workspace","registerButtonCallback","window","ReactNativeWebView","postMessage","error","alert","newXml","Xml","domToText","workspaceToDom","console","log","workspaceToCode","onXmlChange","handleView","e","handleRun","eval","className","onClick","variant","class","workspaceConfiguration","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","pinch","horizontalLayout","toolboxPosition","initialXml","INITIAL_XML","onImportXmlError","useBlocklyWorkspace","ref","onInject","onDispose","setWorkspace","didInitialImport","setDidInitialImport","didHandleNewWorkspace","setDidHandleNewWorkspace","workspaceConfigurationRef","useRef","current","toolboxConfigurationRef","updateToolbox","onInjectRef","onDisposeRef","handleWorkspaceChanged","newWorkspace","inject","toolbox","theme","Theme","Flyout","prototype","MARGIN","onDisposeFunction","dispose","listener","addChangeListener","removeChangeListener","func","wait","timeout","later","args","clearTimeout","setTimeout","debounce","callback","cancel","domToWorkspace","textToDom","importFromXml","BlocklyWorkspace","editorDiv","onXmlChangeRef","defaultProps","Boolean","location","hostname","match","addEventListener","editor","createElement","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","INITIAL_TOOLBOX_XML","kind","contents","name","colour","text","callbackKey","type","blockxml","custom","INITIAL_TOOLBOX_CATEGORIES","blocks","values","TIMES","shadow","fields","NUM","statements","DO","TEXT"],"mappings":"6wCAaMA,IAAM,SAANA,MAAa,IAAD,gBACwCC,6CAAMC,SAC5DC,oDAAYC,sBAFE,wNACTC,qBADS,oBACaC,wBADb,oBAIVC,SAAW,GAJD,UAKQL,sDALR,4MAKTM,KALS,cAKHC,QALG,yBAMMP,sDANN,6MAMTQ,IANS,cAMJC,OANI,yBAOQT,sDAPR,6MAOTU,KAPS,cAOHC,QAPG,cAYhBZ,6CAAMa,WAAU,WAEdC,+CAAQC,UAAUC,6CAiClB,IAAMC,EAAQ,CACZ,KAAQ,QACR,SAAY,+BACZ,MAAS,CACP,CACE,KAAQ,eAEV,CACE,KAAQ,eACR,KAAQ,QACR,MAAS,EACT,UAAa,IAGjB,cAAgB,EAChB,kBAAqB,KACrB,cAAiB,KACjB,OAAU,GACV,QAAW,4GACX,QAAW,IAEbH,+CAAQI,OAAR,MAA0B,CACxBC,KAAM,WACJC,KAAKC,SAASJ,KAKlBH,+CAAQQ,WAAR,MAA8B,SAAUC,GAItC,MADW,WAFQA,EAAMC,cAAc,SAEA,OAMzC,IAAMC,EAAO,CACX,KAAQ,OACR,SAAY,sCACZ,MAAS,CACP,CACE,KAAQ,eAEV,CACE,KAAQ,eACR,KAAQ,OACR,MAAS,EACT,UAAa,IAGjB,cAAgB,EAChB,kBAAqB,KACrB,cAAiB,KACjB,OAAU,EACV,QAAW,oGACX,QAAW,IAEbX,+CAAQI,OAAR,KAAyB,CACvBC,KAAM,WACJC,KAAKC,SAASI,KAKlBX,+CAAQQ,WAAR,KAA6B,SAAUC,GAIrC,MADW,WAFOA,EAAMC,cAAc,QAEA,OAMxC,IAAME,EAAO,CACX,KAAQ,OACR,SAAY,wCACZ,MAAS,CACP,CACE,KAAQ,eAEV,CACE,KAAQ,eACR,KAAQ,OACR,MAAS,EACT,UAAa,IAGjB,cAAgB,EAChB,kBAAqB,KACrB,cAAiB,KACjB,OAAU,EACV,QAAW,sGACX,QAAW,IAEbZ,+CAAQI,OAAR,KAAyB,CACvBC,KAAM,WACJC,KAAKC,SAASK,KAKlBZ,+CAAQQ,WAAR,KAA6B,SAAUC,GAIrC,MADW,WAFOA,EAAMC,cAAc,QAEA,SAKvC,IAEH,IAAMG,kBAAoB3B,6CAAM4B,aAAY,SAACC,GAC3CA,EAAUC,uBAAuB,YAAY,WAC3ClB,QAAQH,KACR,IACEsB,OAAOC,mBAAmBC,YAAYxB,KAExC,MAAOyB,GACLC,MAAMD,GAERC,MAAM,wEAER,IAAMC,EAAStB,+CAAQuB,IAAIC,UAAUxB,+CAAQuB,IAAIE,eAAeV,IAChEW,QAAQC,IAAIL,GACZ1B,OAAO0B,GAEP,IAAM7B,EAAOO,+CAAQQ,WAAWoB,gBAAgBb,GAChDW,QAAQC,IAAIlC,GACZC,QAAQD,KACP,IAEGoC,YAAc3C,6CAAM4B,aAAY,SAACQ,GACrCI,QAAQC,IAAI,cAAeL,KAC1B,IAEGQ,WAAa,SAACC,GAClB,IAAMd,OAAOC,mBAAmBC,YAAY1B,MAC5C,MAAO2B,GACLC,MAAMD,KAIJY,UAAY,SAAZA,UAAaD,GACjBjC,QAAQH,KACRsC,KAAKxC,OAGP,OACE,+HACE,kEAAKyC,UAAU,mBAAf,SACE,4DAAC,sDAAD,CAAQC,QAASL,WAAYM,QAAQ,kBAAkBF,UAAU,aAAjE,cAA+E,gEAAGG,MAAM,oCAAT,uBAEjF,kEAAKH,UAAU,cAAf,SACE,4DAAC,sDAAD,CAAQC,QAASH,UAAWI,QAAQ,kBAAkBF,UAAU,aAAhE,cAA8E,gEAAGG,MAAM,oCAAT,uBAEhF,2DAAC,gDAAD,CACE/C,qBAAsBA,qBACtBgD,uBAAwB,CAOtBC,KAAM,CACJC,UAAU,EACVC,OAAO,EACPC,WAAY,EACZC,SAAU,EACVC,SAAU,GACVC,WAAY,IACZC,OAAO,GAETC,kBAAkB,EAClBC,gBAAiB,OAGnBC,WAAY7D,oDAAY8D,YACxBhB,UAAU,cACVrB,kBAAmBA,kBACnBgB,YAAaA,YACbsB,iBAAkB,kBAAMzB,QAAQC,IAAI,yDACpCnC,SAAUA,eAQHP,2B,iICzOf,IA0IemE,EA1Ia,SAAC,GAStB,IARLC,EAQI,EARJA,IACAJ,EAOI,EAPJA,WACA3D,EAMI,EANJA,qBACAgD,EAKI,EALJA,uBACAzB,EAII,EAJJA,kBACAsC,EAGI,EAHJA,iBACAG,EAEI,EAFJA,SACAC,EACI,EADJA,UACI,EAC8BrE,IAAMC,SAAS,MAD7C,mBACG4B,EADH,KACcyC,EADd,OAEkBtE,IAAMC,SAAS8D,GAFjC,mBAEGtD,EAFH,KAEQC,EAFR,OAG4CV,IAAMC,UAAS,GAH3D,mBAGGsE,EAHH,KAGqBC,EAHrB,OAKFxE,IAAMC,UAAS,GALb,mBAIGwE,EAJH,KAI0BC,EAJ1B,KASEC,EAA4B3E,IAAM4E,OAAOxB,GAC/CpD,IAAMa,WAAU,WACd8D,EAA0BE,QAAUzB,IACnC,CAACA,IAEJ,IAAM0B,EAA0B9E,IAAM4E,OAAOxE,GAC7CJ,IAAMa,WAAU,WACdiE,EAAwBD,QAAUzE,EAC9BA,GAAwByB,GAC1BA,EAAUkD,cAAc3E,KAEzB,CAACA,EAAsByB,IAE1B,IAAMmD,EAAchF,IAAM4E,OAAOR,GAC3Ba,EAAejF,IAAM4E,OAAOP,GAClCrE,IAAMa,WAAU,WACdmE,EAAYH,QAAUT,IACrB,CAACA,IACJpE,IAAMa,WAAU,WACdoE,EAAaJ,QAAUR,IACtB,CAACA,IAEJ,IAAMa,EAAyBlF,IAAM4B,aACnC,SAACuD,GACKxD,GACFA,EAAkBwD,KAGtB,CAACxD,IAyFH,OArFA3B,IAAMa,WAAU,WACd,IAAMsE,EAAerE,IAAQsE,OAAOjB,EAAIU,QAAnB,2BAChBF,EAA0BE,SADV,IAEnBQ,QAASP,EAAwBD,QACjCS,MAAOC,OAETzE,IAAQ0E,OAAOC,UAAUC,OAAS,GAClCpB,EAAaa,GACbX,GAAoB,GACpBE,GAAyB,GAErBM,EAAYH,SACdG,EAAYH,QAAQM,GAGtB,IAAMQ,EAAoBV,EAAaJ,QAGvC,OAAO,WACLM,EAAaS,UAETD,GACFA,EAAkBR,MAGrB,CAAChB,IAGJnE,IAAMa,WAAU,WACVgB,IAAc4C,GAChBS,EAAuBrD,KAExB,CAACqD,EAAwBT,EAAuB5C,IAGnD7B,IAAMa,WAAU,WACd,GAAiB,MAAbgB,EAAJ,CAIA,IAAMgE,EAAW,WACfX,EAAuBrD,IAGzB,OADAA,EAAUiE,kBAAkBD,GACrB,WACLhE,EAAUkE,qBAAqBF,OAEhC,CAAChE,EAAWqD,IAGflF,IAAMa,WAAU,WACd,GAAiB,MAAbgB,EAAJ,CADoB,MCtHT,SAAkBmE,EAAMC,GACrC,IAAIC,EAAU,KACVC,EAAQ,KAkBZ,MAAO,CAhBmB,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBACrCD,EAAQ,WACND,EAAU,KACVF,EAAI,WAAJ,EAAQI,IAEVC,aAAaH,GACbA,EAAUI,WAAWH,EAAOF,IAGf,WACG,OAAZC,IACFG,aAAaH,GACbC,OD2GyBI,EAAS,WAClC,IAAMnE,EAAStB,IAAQuB,IAAIC,UACzBxB,IAAQuB,IAAIE,eAAeV,IAEzBO,IAAW3B,GAIfC,EAAO0B,KACN,KAdiB,mBAKboE,EALa,KAKHC,EALG,KAkBpB,OAFA5E,EAAUiE,kBAAkBU,GAErB,WACL3E,EAAUkE,qBAAqBS,GAC/BC,QAED,CAAC5E,EAAWpB,IAGfT,IAAMa,WAAU,WACVJ,GAAOoB,IAAc0C,IA1I7B,SAAuB9D,EAAKoB,EAAWoC,GACrC,IAEE,OADAnD,IAAQuB,IAAIqE,eAAe5F,IAAQuB,IAAIsE,UAAUlG,GAAMoB,IAChD,EACP,MAAOgB,GAIP,OAHIoB,GACFA,EAAiBpB,IAEZ,GAmIW+D,CAAcnG,EAAKoB,EAAWoC,IAE5CvD,EAAO,MAET8D,GAAoB,MAErB,CAAC/D,EAAKoB,EAAW0C,EAAkBN,IAE/B,CAAEpC,YAAWpB,Q,OE7HtB,SAASoG,EAAT,GAUI,IATF9C,EASC,EATDA,WACA3D,EAQC,EARDA,qBACAgD,EAOC,EAPDA,uBACAJ,EAMC,EANDA,UACArB,EAKC,EALDA,kBACAgB,EAIC,EAJDA,YACAsB,EAGC,EAHDA,iBACAG,EAEC,EAFDA,SACAC,EACC,EADDA,UAEMyC,EAAY9G,IAAM4E,OAAO,MACvBnE,EAAQyD,EAAoB,CAClCC,IAAK2C,EACL/C,aACA3D,uBACAgD,yBACAzB,oBACAsC,mBACAG,WACAC,cARM5D,IAUFsG,EAAiB/G,IAAM4E,OAAOjC,GAUpC,OATA3C,IAAMa,WAAU,WACdkG,EAAelC,QAAUlC,IACxB,CAACA,IACJ3C,IAAMa,WAAU,WACVkG,EAAelC,SAAWpE,GAC5BsG,EAAelC,QAAQpE,KAExB,CAACA,IAEG,qBAAKuC,UAAWA,EAAWmB,IAAK2C,IAIzCD,EAAiBG,aAhDI,CACnBjD,WAAY,KACZ3D,qBAAsB,KACtBgD,uBAAwB,KACxBJ,UAAW,KACXrB,kBAAmB,KACnBsC,iBAAkB,KAClBtB,YAAa,KACbyB,SAAU,KACVC,UAAW,MAyCEwC,S,iHCtDKI,QACW,cAA7BlF,OAAOmF,SAASC,UAEe,UAA7BpF,OAAOmF,SAASC,UAEhBpF,OAAOmF,SAASC,SAASC,MACvB,2D,MCVNrF,OAAOsF,iBAAiB,QAAQ,WAC5B,IAAMC,EAAStH,IAAMuH,cAAcxH,KACnCyH,IAASC,OAAOH,EAAQI,SAASC,eAAe,YDuH9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,+BEnInB,IA2hCM/H,EAAc,CAClB8D,YA3hCA,mLA4hCAkE,oBAnaA,uzVAoaA/H,qBA3hC2B,CAC3BgI,KAAM,kBACNC,SAAU,CACR,CACED,KAAM,WACNE,KAAM,2BACNC,OAAQ,IACRF,SAAU,CACR,CACED,KAAM,SACNI,KAAM,qCACNC,YAAa,cAInB,CAAEL,KAAM,OACR,CACEA,KAAM,WACNE,KAAM,QACNC,OAAQ,IACRF,SAAU,CACR,CACED,KAAM,QACNM,KAAM,eAER,CACEN,KAAM,QACNO,SACE,mEAEJ,CACEP,KAAM,QACNO,SACE,sEAEJ,CACEP,KAAM,QACNM,KAAM,gBAER,CACEN,KAAM,QACNO,SACE,uEAEJ,CACEP,KAAM,QACNM,KAAM,cAER,CACEN,KAAM,QACNM,KAAM,mBAIZ,CACEN,KAAM,WACNE,KAAM,mBACNC,OAAQ,IACRF,SAAU,CACR,CACED,KAAM,QACNO,SACE,gMAQJ,CACEP,KAAM,QACNO,SACE,gGAIJ,CACEP,KAAM,QACNO,SACE,2hBAmBJ,CACEP,KAAM,QACNO,SACE,oIAIJ,CACEP,KAAM,QACNO,SACE,yGAMR,CACEP,KAAM,WACNE,KAAM,kBACNC,OAAQ,IACRF,SAAU,CACR,CACED,KAAM,QACNO,SACE,kOASJ,CACEP,KAAM,QACNO,SACE,qFAIJ,CACEP,KAAM,QACNO,SACE,gOASJ,CACEP,KAAM,QACNO,SACE,8NASJ,CACEP,KAAM,QACNO,SACE,6FAIJ,CACEP,KAAM,QACNO,SACE,8SAUJ,CACEP,KAAM,QACNO,SACE,wWAcJ,CACEP,KAAM,QACNO,SACE,6HAKJ,CACEP,KAAM,QACNO,SACE,+UAaJ,CACEP,KAAM,QACNO,SACE,sdAkBJ,CACEP,KAAM,QACNO,SACE,0UAaJ,CACEP,KAAM,QACNM,KAAM,uBAIZ,CACEN,KAAM,WACNE,KAAM,oBACNC,OAAQ,IACRF,SAAU,CACR,CACED,KAAM,QACNO,SACE,+TAUJ,CACEP,KAAM,QACNO,SACE,8EAIJ,CACEP,KAAM,QACNO,SACE,qQASJ,CACEP,KAAM,QACNO,SACE,yLAQJ,CACEP,KAAM,QACNO,SACE,uLAQJ,CACEP,KAAM,QACNO,SACE,wZAcJ,CACEP,KAAM,QACNO,SACE,uFAIJ,CACEP,KAAM,QACNO,SACE,kYAWJ,CACEP,KAAM,QACNO,SACE,wOASJ,CACEP,KAAM,QACNO,SACE,6NASJ,CACEP,KAAM,QACNO,SACE,uLAQJ,CACEP,KAAM,QACNO,SACE,8QAYR,CACEP,KAAM,WACNE,KAAM,eACNC,OAAQ,IACRF,SAAU,CACR,CACED,KAAM,QACNO,SACE,mRASJ,CACEP,KAAM,QACNO,SACE,+FAIJ,CACEP,KAAM,QACNO,SACE,4LAQJ,CACEP,KAAM,QACNM,KAAM,gBAER,CACEN,KAAM,QACNM,KAAM,iBAER,CACEN,KAAM,QACNO,SACE,+FAIJ,CACEP,KAAM,QACNO,SACE,0XAWJ,CACEP,KAAM,QACNO,SACE,uWAWJ,CACEP,KAAM,QACNO,SACE,+XAWJ,CACEP,KAAM,QACNO,SACE,yQAUJ,CACEP,KAAM,QACNO,SACE,sIAqER,CAAEP,KAAM,OACR,CACEA,KAAM,WACNE,KAAM,YACNM,OAAQ,WACRL,OAAQ,KAEV,CACEH,KAAM,WACNE,KAAM,SACNM,OAAQ,YACRL,OAAQ,KAEV,CAAEH,KAAM,OACR,CACEA,KAAM,WACNE,KAAM,mBACNC,OAAQ,GACRF,SAAU,CACR,CACED,KAAM,QACNO,SACE,6DAEJ,CACEP,KAAM,QACNO,SACE,2DAEJ,CACEP,KAAM,QACNO,SACE,+DA6aVE,2BA1DiC,CACjC,CACEP,KAAM,WACNQ,OAAQ,CACN,CAAEJ,KAAM,eACR,CACEA,KAAM,sBACNK,OAAQ,CACNC,MAAO,CACLN,KAAM,cACNO,QAAQ,EACRC,OAAQ,CACNC,IAAK,MAIXC,WAAY,CACVC,GAAI,CACFX,KAAM,aACNO,QAAQ,EACRF,OAAQ,CACNO,KAAM,CACJZ,KAAM,OACNO,QAAQ,EACRC,OAAQ,CACNI,KAAM,cAStB,CACEhB,KAAM,OACNQ,OAAQ,CACN,CAAEJ,KAAM,QACR,CACEA,KAAM,aACNK,OAAQ,CACNO,KAAM,CACJZ,KAAM,OACNO,QAAQ,EACRC,OAAQ,CACNI,KAAM,cAgBLnJ,Q","file":"static/js/main.8de80178.chunk.js","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n\nimport React, { useState } from \"react\";\nimport Blockly from \"blockly\";\nimport * as Vi from 'blockly/msg/vi';\n\nimport { BlocklyWorkspace } from \"./index-workspace\";\nimport ConfigFiles from \"./initContent/content\";\n\nimport Button from 'react-bootstrap/Button';\n\n\n\nconst App = () => {\n  const [toolboxConfiguration, setToolboxConfiguration] = React.useState(\n    ConfigFiles.INITIAL_TOOLBOX_JSON\n  );\n  const modalRef = [];\n  const [code, setCode] = useState()\n  const [xml, setXml] = useState()\n  const [save, setSave] = useState()\n\n\n\n\n  React.useEffect(() => {\n\n    Blockly.setLocale(Vi)\n\n    // window.setTimeout(() => {\n    //   setToolboxConfiguration((prevConfig) => ({\n    //     ...prevConfig,\n    //     contents: [\n    //       ...prevConfig.contents,\n    //       {\n    //         kind: \"category\",\n    //         name: \"Them vao sau 2 giay\",\n    //         contents: [\n    //           { kind: \"block\", type: \"text\" },\n\n    //         ],\n    //         colour: 100\n    //       },\n    //     ],\n    //   }));\n    // }, 2000);\n\n    // window.setTimeout(() => {\n    //   setToolboxConfiguration((prevConfig) => ({\n    //     ...prevConfig,\n    //     contents: [\n    //       ...prevConfig.contents.slice(0, prevConfig.contents.length - 1),\n    //     ],\n    //   }));\n    // }, 4000);\n\n\n\n\n    //CUSTOM GIU THANG\n    const thang = {\n      \"type\": \"thang\",\n      \"message0\": \"Giữ thẳng %1 %2 mm\",\n      \"args0\": [\n        {\n          \"type\": \"input_dummy\"\n        },\n        {\n          \"type\": \"field_number\",\n          \"name\": \"THANG\",\n          \"value\": 0,\n          \"precision\": 1\n        }\n      ],\n      \"inputsInline\": true,\n      \"previousStatement\": null,\n      \"nextStatement\": null,\n      \"colour\": 75,\n      \"tooltip\": \"Giữ đai sắt thẳng với trong ... giây, độ chính xác milimét\",\n      \"helpUrl\": \"\"\n    }\n    Blockly.Blocks['thang'] = {\n      init: function () {\n        this.jsonInit(thang);\n        // Assign 'this' to a variable for use in the tooltip closure below.\n      }\n    };\n\n    Blockly.JavaScript['thang'] = function (block) {\n      var number_thang = block.getFieldValue('THANG');\n      // TODO: Assemble JavaScript into code variable.\n      var code = 'diThang(' + number_thang + ')\\n';\n      return code;\n    };\n\n\n    //CUSTOM UON TRAI\n    const trai = {\n      \"type\": \"trai\",\n      \"message0\": \"Uốn trái %1 %2 độ\",\n      \"args0\": [\n        {\n          \"type\": \"input_dummy\"\n        },\n        {\n          \"type\": \"field_number\",\n          \"name\": \"TRAI\",\n          \"value\": 0,\n          \"precision\": 1\n        }\n      ],\n      \"inputsInline\": true,\n      \"previousStatement\": null,\n      \"nextStatement\": null,\n      \"colour\": 0,\n      \"tooltip\": \"Uốn trái đai sắt trong ... giây, độ chính xác 1 độ\",\n      \"helpUrl\": \"\"\n    }\n    Blockly.Blocks['trai'] = {\n      init: function () {\n        this.jsonInit(trai);\n        // Assign 'this' to a variable for use in the tooltip closure below.\n      }\n    };\n\n    Blockly.JavaScript['trai'] = function (block) {\n      var number_trai = block.getFieldValue('TRAI');\n      // TODO: Assemble JavaScript into code variable.\n      var code = 'uonTrai(' + number_trai + ')\\n';\n      return code;\n    };\n\n\n    //CUSTOM UON PHAI\n    const phai = {\n      \"type\": \"phai\",\n      \"message0\": \"Uốn phải %1 %2 độ\",\n      \"args0\": [\n        {\n          \"type\": \"input_dummy\"\n        },\n        {\n          \"type\": \"field_number\",\n          \"name\": \"PHAI\",\n          \"value\": 0,\n          \"precision\": 1\n        }\n      ],\n      \"inputsInline\": true,\n      \"previousStatement\": null,\n      \"nextStatement\": null,\n      \"colour\": 0,\n      \"tooltip\": \"Uốn phải đai sắt trong ... giây, độ chính xác 1 độ\",\n      \"helpUrl\": \"\"\n    }\n    Blockly.Blocks['phai'] = {\n      init: function () {\n        this.jsonInit(phai);\n        // Assign 'this' to a variable for use in the tooltip closure below.\n      }\n    };\n\n    Blockly.JavaScript['phai'] = function (block) {\n      var number_trai = block.getFieldValue('PHAI');\n      // TODO: Assemble JavaScript into code variable.\n      var code = 'uonTrai(' + number_trai + ')\\n';\n      return code;\n    };\n\n\n  }, []);\n\n  const onWorkspaceChange = React.useCallback((workspace) => {\n    workspace.registerButtonCallback(\"saveFile\", () => {\n      setSave(xml)\n      try {\n        window.ReactNativeWebView.postMessage(xml)\n      }\n      catch (error) {\n        alert(error)\n      }\n      alert(\"Chương trình đã được lưu\");\n    });\n    const newXml = Blockly.Xml.domToText(Blockly.Xml.workspaceToDom(workspace));\n    console.log(newXml)\n    setXml(newXml)\n\n    const code = Blockly.JavaScript.workspaceToCode(workspace);\n    console.log(code)\n    setCode(code)\n  }, []);\n\n  const onXmlChange = React.useCallback((newXml) => {\n    console.log(\"XML change:\", newXml);\n  }, []);\n\n  const handleView = (e) => {\n    try { window.ReactNativeWebView.postMessage(code) }\n    catch (error) {\n      alert(error)\n    }\n  }\n\n  const handleRun = (e) => {\n    setSave(xml)\n    eval(code)\n  }\n\n  return (\n    <>\n      <div className=\"btn-wrapper-view\">\n        <Button onClick={handleView} variant=\"outline-warning\" className=\"btn-circle\"> <i class=\"material-icons dodgerblue i-large\">toll</i></Button>\n      </div>\n      <div className=\"btn-wrapper\">\n        <Button onClick={handleRun} variant=\"outline-warning\" className=\"btn-circle\"> <i class=\"material-icons dodgerblue i-large\">flag</i></Button>\n      </div>\n      <BlocklyWorkspace\n        toolboxConfiguration={toolboxConfiguration}\n        workspaceConfiguration={{\n          // grid: {\n          //   spacing: 20,\n          //   length: 3,\n          //   colour: \"#ccc\",\n          //   snap: true,\n          // },\n          zoom: {\n            controls: true,\n            wheel: false,\n            startScale: 1.0,\n            maxScale: 2,\n            minScale: 0.2,\n            scaleSpeed: 1.2,\n            pinch: true\n          },\n          horizontalLayout: true,\n          toolboxPosition: 'end',\n\n        }}\n        initialXml={ConfigFiles.INITIAL_XML}\n        className=\"fill-height\"\n        onWorkspaceChange={onWorkspaceChange}\n        onXmlChange={onXmlChange}\n        onImportXmlError={() => console.log(\"Không thể mở chương trình.\")}\n        modalRef={modalRef}\n\n      />\n\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport Blockly from \"blockly\";\n\nimport debounce from \"./debounce\";\nimport Theme from '@blockly/theme-modern';\n\nfunction importFromXml(xml, workspace, onImportXmlError) {\n  try {\n    Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), workspace);\n    return true;\n  } catch (e) {\n    if (onImportXmlError) {\n      onImportXmlError(e);\n    }\n    return false;\n  }\n}\n\nconst useBlocklyWorkspace = ({\n  ref,\n  initialXml,\n  toolboxConfiguration,\n  workspaceConfiguration,\n  onWorkspaceChange,\n  onImportXmlError,\n  onInject,\n  onDispose,\n}) => {\n  const [workspace, setWorkspace] = React.useState(null);\n  const [xml, setXml] = React.useState(initialXml);\n  const [didInitialImport, setDidInitialImport] = React.useState(false);\n  const [didHandleNewWorkspace, setDidHandleNewWorkspace] =\n    React.useState(false);\n\n  // we explicitly don't want to recreate the workspace when the configuration changes\n  // so, we'll keep it in a ref and update as necessary in an effect hook\n  const workspaceConfigurationRef = React.useRef(workspaceConfiguration);\n  React.useEffect(() => {\n    workspaceConfigurationRef.current = workspaceConfiguration;\n  }, [workspaceConfiguration]);\n\n  const toolboxConfigurationRef = React.useRef(toolboxConfiguration);\n  React.useEffect(() => {\n    toolboxConfigurationRef.current = toolboxConfiguration;\n    if (toolboxConfiguration && workspace) {\n      workspace.updateToolbox(toolboxConfiguration);\n    }\n  }, [toolboxConfiguration, workspace]);\n\n  const onInjectRef = React.useRef(onInject);\n  const onDisposeRef = React.useRef(onDispose);\n  React.useEffect(() => {\n    onInjectRef.current = onInject;\n  }, [onInject]);\n  React.useEffect(() => {\n    onDisposeRef.current = onDispose;\n  }, [onDispose]);\n\n  const handleWorkspaceChanged = React.useCallback(\n    (newWorkspace) => {\n      if (onWorkspaceChange) {\n        onWorkspaceChange(newWorkspace);\n      }\n    },\n    [onWorkspaceChange]\n  );\n\n  // Workspace creation\n  React.useEffect(() => {\n    const newWorkspace = Blockly.inject(ref.current, {\n      ...workspaceConfigurationRef.current,\n      toolbox: toolboxConfigurationRef.current,\n      theme: Theme,\n    });\n    Blockly.Flyout.prototype.MARGIN = 20\n    setWorkspace(newWorkspace);\n    setDidInitialImport(false); // force a re-import if we recreate the workspace\n    setDidHandleNewWorkspace(false); // Singal that a workspace change event needs to be sent.\n\n    if (onInjectRef.current) {\n      onInjectRef.current(newWorkspace);\n    }\n\n    const onDisposeFunction = onDisposeRef.current;\n\n    // Dispose of the workspace when our div ref goes away (Equivalent to didComponentUnmount)\n    return () => {\n      newWorkspace.dispose();\n\n      if (onDisposeFunction) {\n        onDisposeFunction(newWorkspace);\n      }\n    };\n  }, [ref]);\n\n  // Send a workspace change event when the workspace is created\n  React.useEffect(() => {\n    if (workspace && !didHandleNewWorkspace) {\n      handleWorkspaceChanged(workspace);\n    }\n  }, [handleWorkspaceChanged, didHandleNewWorkspace, workspace]);\n\n  // Workspace change listener\n  React.useEffect(() => {\n    if (workspace == null) {\n      return undefined;\n    }\n\n    const listener = () => {\n      handleWorkspaceChanged(workspace);\n    };\n    workspace.addChangeListener(listener);\n    return () => {\n      workspace.removeChangeListener(listener);\n    };\n  }, [workspace, handleWorkspaceChanged]);\n\n  // xmlDidChange callback\n  React.useEffect(() => {\n    if (workspace == null) {\n      return undefined;\n    }\n\n    const [callback, cancel] = debounce(() => {\n      const newXml = Blockly.Xml.domToText(\n        Blockly.Xml.workspaceToDom(workspace)\n      );\n      if (newXml === xml) {\n        return;\n      }\n\n      setXml(newXml);\n    }, 200);\n\n    workspace.addChangeListener(callback);\n\n    return () => {\n      workspace.removeChangeListener(callback);\n      cancel();\n    };\n  }, [workspace, xml]);\n\n  // Initial Xml Changes\n  React.useEffect(() => {\n    if (xml && workspace && !didInitialImport) {\n      const success = importFromXml(xml, workspace, onImportXmlError);\n      if (!success) {\n        setXml(null);\n      }\n      setDidInitialImport(true);\n    }\n  }, [xml, workspace, didInitialImport, onImportXmlError]);\n\n  return { workspace, xml };\n};\n\nexport default useBlocklyWorkspace;\n","export default function debounce(func, wait) {\n  let timeout = null;\n  let later = null;\n\n  const debouncedFunction = (...args) => {\n    later = () => {\n      timeout = null;\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n\n  const cancel = () => {\n    if (timeout !== null) {\n      clearTimeout(timeout);\n      later();\n    }\n  };\n\n  return [debouncedFunction, cancel];\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport useBlocklyWorkspace from \"./useBlocklyWorkspace\";\n\nconst propTypes = {\n  initialXml: PropTypes.string,\n  toolboxConfiguration: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  workspaceConfiguration: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  className: PropTypes.string,\n  onWorkspaceChange: PropTypes.func,\n  onImportXmlError: PropTypes.func,\n  onXmlChange: PropTypes.func,\n  onInject: PropTypes.func,\n  onDispose: PropTypes.func,\n};\n\nconst defaultProps = {\n  initialXml: null,\n  toolboxConfiguration: null,\n  workspaceConfiguration: null,\n  className: null,\n  onWorkspaceChange: null,\n  onImportXmlError: null,\n  onXmlChange: null,\n  onInject: null,\n  onDispose: null,\n};\n\nfunction BlocklyWorkspace({\n  initialXml,\n  toolboxConfiguration,\n  workspaceConfiguration,\n  className,\n  onWorkspaceChange,\n  onXmlChange,\n  onImportXmlError,\n  onInject,\n  onDispose,\n}) {\n  const editorDiv = React.useRef(null);\n  const { xml } = useBlocklyWorkspace({\n    ref: editorDiv,\n    initialXml,\n    toolboxConfiguration,\n    workspaceConfiguration,\n    onWorkspaceChange,\n    onImportXmlError,\n    onInject,\n    onDispose,\n  });\n  const onXmlChangeRef = React.useRef(onXmlChange);\n  React.useEffect(() => {\n    onXmlChangeRef.current = onXmlChange;\n  }, [onXmlChange]);\n  React.useEffect(() => {\n    if (onXmlChangeRef.current && xml) {\n      onXmlChangeRef.current(xml);\n    }\n  }, [xml]);\n\n  return <div className={className} ref={editorDiv} />;\n}\n\nBlocklyWorkspace.propTypes = propTypes;\nBlocklyWorkspace.defaultProps = defaultProps;\n\nexport default BlocklyWorkspace;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nwindow.addEventListener(\"load\", () => {\n    const editor = React.createElement(App);\n    ReactDOM.render(editor, document.getElementById(\"root\"));\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const INITIAL_XML =\n  '<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"controls_whileUntil\" id=\"L{5skzh{.8+YNyc-Z*5D\" x=\"570\" y=\"70\"><field name=\"MODE\">WHILE</field></block></xml>';\n\nconst INITIAL_TOOLBOX_JSON = {\n  kind: \"categoryToolbox\",\n  contents: [\n    {\n      kind: \"category\",\n      name: \"Quản lý tệp\",\n      colour: 160,\n      contents: [\n        {\n          kind: \"button\",\n          text: \"Lưu chương trình\",\n          callbackKey: \"saveFile\",\n        },\n      ],\n    },\n    { kind: \"sep\" },\n    {\n      kind: \"category\",\n      name: \"Logic\",\n      colour: 210,\n      contents: [\n        {\n          kind: \"block\",\n          type: \"controls_if\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"logic_compare\"><field name=\"OP\">EQ</field></block>',\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"logic_operation\"><field name=\"OP\">AND</field></block>',\n        },\n        {\n          kind: \"block\",\n          type: \"logic_negate\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block>',\n        },\n        {\n          kind: \"block\",\n          type: \"logic_null\",\n        },\n        {\n          kind: \"block\",\n          type: \"logic_ternary\",\n        },\n      ],\n    },\n    {\n      kind: \"category\",\n      name: \"Vòng lặp\",\n      colour: 120,\n      contents: [\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"controls_repeat_ext\">\\n' +\n            '      <value name=\"TIMES\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">10</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"controls_whileUntil\">\\n' +\n            '      <field name=\"MODE\">WHILE</field>\\n' +\n            \"    </block>\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"controls_for\">\\n' +\n            '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' +\n            '      <value name=\"FROM\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">1</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"TO\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">10</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"BY\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">1</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"controls_forEach\">\\n' +\n            '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"controls_flow_statements\">\\n' +\n            '      <field name=\"FLOW\">BREAK</field>\\n' +\n            \"    </block>\\n\",\n        },\n      ],\n    },\n    {\n      kind: \"category\",\n      name: \"Phép toán\",\n      colour: 230,\n      contents: [\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_round\">\\n' +\n            '      <field name=\"OP\">ROUND</field>\\n' +\n            '      <value name=\"NUM\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">3.1</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_number\">\\n' +\n            '      <field name=\"NUM\">0</field>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_single\">\\n' +\n            '      <field name=\"OP\">ROOT</field>\\n' +\n            '      <value name=\"NUM\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">9</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_trig\">\\n' +\n            '      <field name=\"OP\">SIN</field>\\n' +\n            '      <value name=\"NUM\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">45</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_constant\">\\n' +\n            '      <field name=\"CONSTANT\">PI</field>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_number_property\">\\n' +\n            '      <mutation divisor_input=\"false\"></mutation>\\n' +\n            '      <field name=\"PROPERTY\">EVEN</field>\\n' +\n            '      <value name=\"NUMBER_TO_CHECK\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">0</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_arithmetic\">\\n' +\n            '      <field name=\"OP\">ADD</field>\\n' +\n            '      <value name=\"A\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">1</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"B\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">1</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_on_list\">\\n' +\n            '      <mutation op=\"SUM\"></mutation>\\n' +\n            '      <field name=\"OP\">SUM</field>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_modulo\">\\n' +\n            '      <value name=\"DIVIDEND\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">64</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"DIVISOR\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">10</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_constrain\">\\n' +\n            '      <value name=\"VALUE\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">50</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"LOW\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">1</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"HIGH\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">100</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"math_random_int\">\\n' +\n            '      <value name=\"FROM\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">1</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"TO\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">100</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          type: \"math_random_float\",\n        },\n      ],\n    },\n    {\n      kind: \"category\",\n      name: \"Văn bản\",\n      colour: 160,\n      contents: [\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_charAt\">\\n' +\n            '      <mutation at=\"true\"></mutation>\\n' +\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\n            '      <value name=\"VALUE\">\\n' +\n            '        <block type=\"variables_get\">\\n' +\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\n            \"        </block>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text\">\\n' +\n            '      <field name=\"TEXT\"></field>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_append\">\\n' +\n            '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' +\n            '      <value name=\"TEXT\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\"></field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_length\">\\n' +\n            '      <value name=\"VALUE\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\">abc</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_isEmpty\">\\n' +\n            '      <value name=\"VALUE\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\"></field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_indexOf\">\\n' +\n            '      <field name=\"END\">FIRST</field>\\n' +\n            '      <value name=\"VALUE\">\\n' +\n            '        <block type=\"variables_get\">\\n' +\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\n            \"        </block>\\n\" +\n            \"      </value>\\n\" +\n            '      <value name=\"FIND\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\">abc</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_join\">\\n' +\n            '      <mutation items=\"2\"></mutation>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_getSubstring\">\\n' +\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\n            '      <value name=\"STRING\">\\n' +\n            '        <block type=\"variables_get\">\\n' +\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\n            \"        </block>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_changeCase\">\\n' +\n            '      <field name=\"CASE\">UPPERCASE</field>\\n' +\n            '      <value name=\"TEXT\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\">abc</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_trim\">\\n' +\n            '      <field name=\"MODE\">BOTH</field>\\n' +\n            '      <value name=\"TEXT\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\">abc</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_print\">\\n' +\n            '      <value name=\"TEXT\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\">abc</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"text_prompt_ext\">\\n' +\n            '      <mutation type=\"TEXT\"></mutation>\\n' +\n            '      <field name=\"TYPE\">TEXT</field>\\n' +\n            '      <value name=\"TEXT\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\">abc</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n      ],\n    },\n    {\n      kind: \"category\",\n      name: \"Danh sách\",\n      colour: 259,\n      contents: [\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_indexOf\">\\n' +\n            '      <field name=\"END\">FIRST</field>\\n' +\n            '      <value name=\"VALUE\">\\n' +\n            '        <block type=\"variables_get\">\\n' +\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n            \"        </block>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_create_with\">\\n' +\n            '      <mutation items=\"0\"></mutation>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_repeat\">\\n' +\n            '      <value name=\"NUM\">\\n' +\n            '        <shadow type=\"math_number\">\\n' +\n            '          <field name=\"NUM\">5</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          type: \"lists_length\",\n        },\n        {\n          kind: \"block\",\n          type: \"lists_isEmpty\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_create_with\">\\n' +\n            '      <mutation items=\"3\"></mutation>\\n' +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_getIndex\">\\n' +\n            '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' +\n            '      <field name=\"MODE\">GET</field>\\n' +\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\n            '      <value name=\"VALUE\">\\n' +\n            '        <block type=\"variables_get\">\\n' +\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n            \"        </block>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_setIndex\">\\n' +\n            '      <mutation at=\"true\"></mutation>\\n' +\n            '      <field name=\"MODE\">SET</field>\\n' +\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\n            '      <value name=\"LIST\">\\n' +\n            '        <block type=\"variables_get\">\\n' +\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n            \"        </block>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_getSublist\">\\n' +\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\n            '      <value name=\"LIST\">\\n' +\n            '        <block type=\"variables_get\">\\n' +\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n            \"        </block>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_split\">\\n' +\n            '      <mutation mode=\"SPLIT\"></mutation>\\n' +\n            '      <field name=\"MODE\">SPLIT</field>\\n' +\n            '      <value name=\"DELIM\">\\n' +\n            '        <shadow type=\"text\">\\n' +\n            '          <field name=\"TEXT\">,</field>\\n' +\n            \"        </shadow>\\n\" +\n            \"      </value>\\n\" +\n            \"    </block>\\n\",\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '    <block type=\"lists_sort\">\\n' +\n            '      <field name=\"TYPE\">NUMERIC</field>\\n' +\n            '      <field name=\"DIRECTION\">1</field>\\n' +\n            \"    </block>\\n\",\n        },\n      ],\n    },\n    /*\n        {\n          kind: \"category\",\n          name: \"Colour\",\n          colour: 19,\n          contents: [\n            {\n              kind: \"block\",\n              blockxml:\n                '    <block type=\"colour_picker\">\\n' +\n                '      <field name=\"COLOUR\">#ff0000</field>\\n' +\n                \"    </block>\\n\",\n            },\n            {\n              kind: \"block\",\n              type: \"colour_random\",\n            },\n            {\n              kind: \"block\",\n              blockxml:\n                '    <block type=\"colour_rgb\">\\n' +\n                '      <value name=\"RED\">\\n' +\n                '        <shadow type=\"math_number\">\\n' +\n                '          <field name=\"NUM\">100</field>\\n' +\n                \"        </shadow>\\n\" +\n                \"      </value>\\n\" +\n                '      <value name=\"GREEN\">\\n' +\n                '        <shadow type=\"math_number\">\\n' +\n                '          <field name=\"NUM\">50</field>\\n' +\n                \"        </shadow>\\n\" +\n                \"      </value>\\n\" +\n                '      <value name=\"BLUE\">\\n' +\n                '        <shadow type=\"math_number\">\\n' +\n                '          <field name=\"NUM\">0</field>\\n' +\n                \"        </shadow>\\n\" +\n                \"      </value>\\n\" +\n                \"    </block>\\n\",\n            },\n            {\n              kind: \"block\",\n              blockxml:\n                '    <block type=\"colour_blend\">\\n' +\n                '      <value name=\"COLOUR1\">\\n' +\n                '        <shadow type=\"colour_picker\">\\n' +\n                '          <field name=\"COLOUR\">#ff0000</field>\\n' +\n                \"        </shadow>\\n\" +\n                \"      </value>\\n\" +\n                '      <value name=\"COLOUR2\">\\n' +\n                '        <shadow type=\"colour_picker\">\\n' +\n                '          <field name=\"COLOUR\">#3333ff</field>\\n' +\n                \"        </shadow>\\n\" +\n                \"      </value>\\n\" +\n                '      <value name=\"RATIO\">\\n' +\n                '        <shadow type=\"math_number\">\\n' +\n                '          <field name=\"NUM\">0.5</field>\\n' +\n                \"        </shadow>\\n\" +\n                \"      </value>\\n\" +\n                \"    </block>\\n\",\n            },\n          ],\n        }, \n    */\n    { kind: \"sep\" },\n    {\n      kind: \"category\",\n      name: \"Biến\",\n      custom: \"VARIABLE\",\n      colour: 330,\n    },\n    {\n      kind: \"category\",\n      name: \"Hàm\",\n      custom: \"PROCEDURE\",\n      colour: 290,\n    },\n    { kind: \"sep\" },\n    {\n      kind: \"category\",\n      name: \"Tạo hình\",\n      colour: 19,\n      contents: [\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"thang\"><field name=\"THANG\">5</field></block>',\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"trai\"><field name=\"TRAI\">5</field></block>',\n        },\n        {\n          kind: \"block\",\n          blockxml:\n            '<block type=\"phai\"><field name=\"PHAI\">5</field></block>',\n        },\n      ],\n    },\n  ],\n};\n\nconst INITIAL_TOOLBOX_XML =\n  '<xml xmlns=\"http://www.w3.org/1999/xhtml\" id=\"toolbox\" style=\"display: none;\">\\n' +\n  '  <category name=\"Logic\" colour=\"#5C81A6\">\\n' +\n  '    <block type=\"controls_if\"></block>\\n' +\n  '    <block type=\"logic_compare\">\\n' +\n  '      <field name=\"OP\">EQ</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"logic_operation\">\\n' +\n  '      <field name=\"OP\">AND</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"logic_negate\"></block>\\n' +\n  '    <block type=\"logic_boolean\">\\n' +\n  '      <field name=\"BOOL\">TRUE</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"logic_null\"></block>\\n' +\n  '    <block type=\"logic_ternary\"></block>\\n' +\n  \"  </category>\\n\" +\n  '  <category name=\"Loops\" colour=\"#5CA65C\">\\n' +\n  '    <block type=\"controls_repeat_ext\">\\n' +\n  '      <value name=\"TIMES\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">10</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"controls_whileUntil\">\\n' +\n  '      <field name=\"MODE\">WHILE</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"controls_for\">\\n' +\n  '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' +\n  '      <value name=\"FROM\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">1</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"TO\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">10</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"BY\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">1</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"controls_forEach\">\\n' +\n  '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"controls_flow_statements\">\\n' +\n  '      <field name=\"FLOW\">BREAK</field>\\n' +\n  \"    </block>\\n\" +\n  \"  </category>\\n\" +\n  '  <category name=\"Math\" colour=\"#5C68A6\">\\n' +\n  '    <block type=\"math_round\">\\n' +\n  '      <field name=\"OP\">ROUND</field>\\n' +\n  '      <value name=\"NUM\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">3.1</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_number\">\\n' +\n  '      <field name=\"NUM\">0</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"math_single\">\\n' +\n  '      <field name=\"OP\">ROOT</field>\\n' +\n  '      <value name=\"NUM\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">9</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_trig\">\\n' +\n  '      <field name=\"OP\">SIN</field>\\n' +\n  '      <value name=\"NUM\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">45</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_constant\">\\n' +\n  '      <field name=\"CONSTANT\">PI</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"math_number_property\">\\n' +\n  '      <mutation divisor_input=\"false\"></mutation>\\n' +\n  '      <field name=\"PROPERTY\">EVEN</field>\\n' +\n  '      <value name=\"NUMBER_TO_CHECK\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">0</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_arithmetic\">\\n' +\n  '      <field name=\"OP\">ADD</field>\\n' +\n  '      <value name=\"A\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">1</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"B\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">1</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_on_list\">\\n' +\n  '      <mutation op=\"SUM\"></mutation>\\n' +\n  '      <field name=\"OP\">SUM</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"math_modulo\">\\n' +\n  '      <value name=\"DIVIDEND\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">64</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"DIVISOR\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">10</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_constrain\">\\n' +\n  '      <value name=\"VALUE\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">50</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"LOW\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">1</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"HIGH\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">100</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_random_int\">\\n' +\n  '      <value name=\"FROM\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">1</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"TO\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">100</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"math_random_float\"></block>\\n' +\n  \"  </category>\\n\" +\n  '  <category name=\"Text\" colour=\"#5CA68D\">\\n' +\n  '    <block type=\"text_charAt\">\\n' +\n  '      <mutation at=\"true\"></mutation>\\n' +\n  '      <field name=\"WHERE\">FROM_START</field>\\n' +\n  '      <value name=\"VALUE\">\\n' +\n  '        <block type=\"variables_get\">\\n' +\n  '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\n  \"        </block>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text\">\\n' +\n  '      <field name=\"TEXT\"></field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"text_append\">\\n' +\n  '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' +\n  '      <value name=\"TEXT\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\"></field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_length\">\\n' +\n  '      <value name=\"VALUE\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\">abc</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_isEmpty\">\\n' +\n  '      <value name=\"VALUE\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\"></field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_indexOf\">\\n' +\n  '      <field name=\"END\">FIRST</field>\\n' +\n  '      <value name=\"VALUE\">\\n' +\n  '        <block type=\"variables_get\">\\n' +\n  '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\n  \"        </block>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"FIND\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\">abc</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_join\">\\n' +\n  '      <mutation items=\"2\"></mutation>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"text_getSubstring\">\\n' +\n  '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\n  '      <field name=\"WHERE1\">FROM_START</field>\\n' +\n  '      <field name=\"WHERE2\">FROM_START</field>\\n' +\n  '      <value name=\"STRING\">\\n' +\n  '        <block type=\"variables_get\">\\n' +\n  '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\n  \"        </block>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_changeCase\">\\n' +\n  '      <field name=\"CASE\">UPPERCASE</field>\\n' +\n  '      <value name=\"TEXT\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\">abc</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_trim\">\\n' +\n  '      <field name=\"MODE\">BOTH</field>\\n' +\n  '      <value name=\"TEXT\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\">abc</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_print\">\\n' +\n  '      <value name=\"TEXT\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\">abc</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"text_prompt_ext\">\\n' +\n  '      <mutation type=\"TEXT\"></mutation>\\n' +\n  '      <field name=\"TYPE\">TEXT</field>\\n' +\n  '      <value name=\"TEXT\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\">abc</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  \"  </category>\\n\" +\n  '  <category name=\"Lists\" colour=\"#745CA6\">\\n' +\n  '    <block type=\"lists_indexOf\">\\n' +\n  '      <field name=\"END\">FIRST</field>\\n' +\n  '      <value name=\"VALUE\">\\n' +\n  '        <block type=\"variables_get\">\\n' +\n  '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n  \"        </block>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_create_with\">\\n' +\n  '      <mutation items=\"0\"></mutation>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_repeat\">\\n' +\n  '      <value name=\"NUM\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">5</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_length\"></block>\\n' +\n  '    <block type=\"lists_isEmpty\"></block>\\n' +\n  '    <block type=\"lists_create_with\">\\n' +\n  '      <mutation items=\"3\"></mutation>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_getIndex\">\\n' +\n  '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' +\n  '      <field name=\"MODE\">GET</field>\\n' +\n  '      <field name=\"WHERE\">FROM_START</field>\\n' +\n  '      <value name=\"VALUE\">\\n' +\n  '        <block type=\"variables_get\">\\n' +\n  '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n  \"        </block>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_setIndex\">\\n' +\n  '      <mutation at=\"true\"></mutation>\\n' +\n  '      <field name=\"MODE\">SET</field>\\n' +\n  '      <field name=\"WHERE\">FROM_START</field>\\n' +\n  '      <value name=\"LIST\">\\n' +\n  '        <block type=\"variables_get\">\\n' +\n  '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n  \"        </block>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_getSublist\">\\n' +\n  '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\n  '      <field name=\"WHERE1\">FROM_START</field>\\n' +\n  '      <field name=\"WHERE2\">FROM_START</field>\\n' +\n  '      <value name=\"LIST\">\\n' +\n  '        <block type=\"variables_get\">\\n' +\n  '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\n  \"        </block>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_split\">\\n' +\n  '      <mutation mode=\"SPLIT\"></mutation>\\n' +\n  '      <field name=\"MODE\">SPLIT</field>\\n' +\n  '      <value name=\"DELIM\">\\n' +\n  '        <shadow type=\"text\">\\n' +\n  '          <field name=\"TEXT\">,</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"lists_sort\">\\n' +\n  '      <field name=\"TYPE\">NUMERIC</field>\\n' +\n  '      <field name=\"DIRECTION\">1</field>\\n' +\n  \"    </block>\\n\" +\n  \"  </category>\\n\" +\n  '  <category name=\"Colour\" colour=\"#A6745C\">\\n' +\n  '    <block type=\"colour_picker\">\\n' +\n  '      <field name=\"COLOUR\">#ff0000</field>\\n' +\n  \"    </block>\\n\" +\n  '    <block type=\"colour_random\"></block>\\n' +\n  '    <block type=\"colour_rgb\">\\n' +\n  '      <value name=\"RED\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">100</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"GREEN\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">50</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"BLUE\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">0</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  '    <block type=\"colour_blend\">\\n' +\n  '      <value name=\"COLOUR1\">\\n' +\n  '        <shadow type=\"colour_picker\">\\n' +\n  '          <field name=\"COLOUR\">#ff0000</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"COLOUR2\">\\n' +\n  '        <shadow type=\"colour_picker\">\\n' +\n  '          <field name=\"COLOUR\">#3333ff</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  '      <value name=\"RATIO\">\\n' +\n  '        <shadow type=\"math_number\">\\n' +\n  '          <field name=\"NUM\">0.5</field>\\n' +\n  \"        </shadow>\\n\" +\n  \"      </value>\\n\" +\n  \"    </block>\\n\" +\n  \"  </category>\\n\" +\n  \"  <sep></sep>\\n\" +\n  '  <category name=\"Custom Button\" colour=\"#A6745C\">\\n' +\n  '    <button text=\"A button\" callbackKey=\"myFirstButtonPressed\"></button>\\n' +\n  \"  </category>\\n\" +\n  '  <category name=\"Variables\" colour=\"#A65C81\" custom=\"VARIABLE\"></category>\\n' +\n  '  <category name=\"Functions\" colour=\"#9A5CA6\" custom=\"PROCEDURE\"></category>\\n' +\n  \"</xml>\";\n\n\nconst INITIAL_TOOLBOX_CATEGORIES = [\n  {\n    name: \"Controls\",\n    blocks: [\n      { type: \"controls_if\" },\n      {\n        type: \"controls_repeat_ext\",\n        values: {\n          TIMES: {\n            type: \"math_number\",\n            shadow: true,\n            fields: {\n              NUM: 10,\n            },\n          },\n        },\n        statements: {\n          DO: {\n            type: \"text_print\",\n            shadow: true,\n            values: {\n              TEXT: {\n                type: \"text\",\n                shadow: true,\n                fields: {\n                  TEXT: \"abc\",\n                },\n              },\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    name: \"Text\",\n    blocks: [\n      { type: \"text\" },\n      {\n        type: \"text_print\",\n        values: {\n          TEXT: {\n            type: \"text\",\n            shadow: true,\n            fields: {\n              TEXT: \"abc\",\n            },\n          },\n        },\n      },\n    ],\n  },\n];\n\nconst ConfigFiles = {\n  INITIAL_XML,\n  INITIAL_TOOLBOX_XML,\n  INITIAL_TOOLBOX_JSON,\n  INITIAL_TOOLBOX_CATEGORIES,\n};\n\nexport default ConfigFiles;\n"],"sourceRoot":""}